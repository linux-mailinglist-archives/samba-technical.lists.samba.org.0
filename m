Return-Path: <samba-technical-bounces@lists.samba.org>
X-Original-To: lists+samba-technical@lfdr.de
Delivered-To: lists+samba-technical@lfdr.de
Received: from hr1.samba.org (hr1.samba.org [IPv6:2a01:4f8:192:486::1:0])
	by mail.lfdr.de (Postfix) with ESMTPS id 5B1E893DB47
	for <lists+samba-technical@lfdr.de>; Sat, 27 Jul 2024 01:54:26 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.samba.org; s=2954282; h=Cc:From:List-Id:To:Subject:Date;
	bh=A2UTD+MmxAjgdPPHEZRinwt9182YI1E7lHOftUb8bh4=; b=dL1ubau4lmZUe7o5TB6kAcdDC/
	lrpcQsBcnxSyh0+5zQaFk1q8x4eeK0vNlOI0gxvxSgmBdgB2jUS3Gwpt8E5FvkeOCcYVygBT5SGe5
	wtwlfnXDiOMWFTQpXRwy7knM/FJVVAy7uJfbkhqV490jp23hzWVut701PToW2yvyOqpSIAR+1NeWD
	grN9q/dtObCm/iDc9xsP3jnzjEELRxNQnyrtVjA1MTpK48aARMBiilf/mUD9Y+GjdeqSUrbWZx04J
	gISvxDggFTeYQ1lBA8BoXSBYlz/kpgEcZBzLC9SzPhGiXMm7z4bJ6Dio/5IDU1j7V0wKVU9hfmM8b
	I4cob/Xw==;
Received: from ip6-localhost ([::1]:38684 helo=hr1.samba.org) 
	by hr1.samba.org with esmtp (Exim)
	id 1sXUkj-001aMz-Vb; Fri, 26 Jul 2024 23:53:38 +0000
Received: from mail-lf1-x12a.google.com ([2a00:1450:4864:20::12a]:47263) 
 by hr1.samba.org with esmtps
 (TLS1.3:ECDHE_SECP256R1__RSA_PSS_RSAE_SHA256__CHACHA20_POLY1305:256)
 (Exim) id 1sXUke-001aMs-Vl
 for samba-technical@lists.samba.org; Fri, 26 Jul 2024 23:53:36 +0000
Received: by mail-lf1-x12a.google.com with SMTP id
 2adb3069b0e04-52efd855adbso2614051e87.2
 for <samba-technical@lists.samba.org>; Fri, 26 Jul 2024 16:53:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20230601; t=1722038011; x=1722642811; darn=lists.samba.org;
 h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
 :date:message-id:reply-to;
 bh=nnlIb8do12YhsqDoREzy6tkDteJQhUbA2FOMCTWaIjs=;
 b=jPqbmY+6FC4qh0OXbctCWvmmtN+NzcXVmn3CU8BXJnwKNaNmc0Y1d7m75opZyf1bT7
 SHH5lHojR4hgn5USht5jeXMByEmw6q0wUqoZoQ7XfD40a5YjtFPzNCWl26naqmvWoKKJ
 PdRKJbOdLw5ch8Vu2O1M3Z7ejJQDRLUwoazRkiOgxg0IB9k4/tsmFlpX6PbLXeM21L8S
 2vHxRasIXBUbrEtY+KIJxSEezkbYwZJcnrkUBZ4OA8m+Job94AQg7Bka5hObGIXlejck
 YQSnwWFgwNQAXIBM1ZcJOt8bhi1v64mk7k8FzHUCYc2Z6g02ubWSda/ULgxs/02pSgtu
 qiVw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1722038011; x=1722642811;
 h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
 :from:to:cc:subject:date:message-id:reply-to;
 bh=nnlIb8do12YhsqDoREzy6tkDteJQhUbA2FOMCTWaIjs=;
 b=rqYfekvx3pooLir4AOfKWYbCTXXJlAiSn9bqgOWiAPrDWvBHlK57cjotDCzF5LcM1i
 m+n780l8vtjtHr6fqLDepWzt5tG6Nqg86wb1OOPVtGVvKSHHUOTbkZqgMAnJddu3fzYp
 TGE1uP5EX6ZPBjZT2ND3tt7dnOC5rsDrbzZWLc2XG/EtvQq1yKqcIeIHrQiV49oYTEql
 WA193K7xutjiuTio2rIqS/hYg7RytiBq58U4hTMrjq9LIYpyjmAG96oPfA0W1Hi+hD85
 HmhRwhp4HJCSCIbNnMGVD0ZMsjeCJyeE5EKH8h/UJH8uCrWT2zBGR4R/d55ELX5Tak3i
 GFCQ==
X-Gm-Message-State: AOJu0Yx8A0RvpBXXFU4lxslN+Q3SIe90ulYaVDOMKH50uQ6rCAM2HPNL
 hYY9XcguaU/3jgcK/g1QxyacegB6StKvwJw78vBoJJWDqiCBv1OgTBqPMpU3FBzT2cfDJZRYXDj
 VTGhRIXHSvEx1SSsoICW9mkyF1Co=
X-Google-Smtp-Source: AGHT+IG+6w+LL/GuKUJbWu9ZI954gcFSTMOgYv6qZOFqjYjPHxiCXiK3N8zVdFjj3sGzZ5UXLJbnM56Cb0PKLRdcgmw=
X-Received: by 2002:a19:2d5b:0:b0:52e:f367:709b with SMTP id
 2adb3069b0e04-5309b2c3056mr651160e87.42.1722038010826; Fri, 26 Jul 2024
 16:53:30 -0700 (PDT)
MIME-Version: 1.0
Date: Fri, 26 Jul 2024 18:53:18 -0500
Message-ID: <CAH2r5mvMr9YgvLds8_OCMVV6FOzuBUgwn8_X6Pbz3hq_oakSWw@mail.gmail.com>
Subject: [PATCH][SMB3] mark compression as CONFIG_EXPERIMENTAL and fix missing
 compression operation
To: Enzo Matsumiya <ematsumiya@suse.de>, CIFS <linux-cifs@vger.kernel.org>
Content-Type: multipart/mixed; boundary="000000000000eced3c061e2f3763"
X-Content-Filtered-By: Mailman/MimeDel 2.1.29
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
 subscribe to the list samba@lists.samba.org"
 <samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/options/samba-technical>,
 <mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/pipermail/samba-technical/>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
 <mailto:samba-technical-request@lists.samba.org?subject=subscribe>
From: Steve French via samba-technical <samba-technical@lists.samba.org>
Reply-To: Steve French <smfrench@gmail.com>
Cc: Anthony Nandaa <profnandaa@gmail.com>,
 samba-technical <samba-technical@lists.samba.org>,
 Jun Ma <junma@microsoft.com>
Errors-To: samba-technical-bounces@lists.samba.org
Sender: "samba-technical" <samba-technical-bounces@lists.samba.org>

--000000000000eced3c061e2f3763
Content-Type: text/plain; charset="UTF-8"

Since some of Enzo's compression patch series has to be changed due to
David Howell's netfs changes to cifs.ko over the past two releases, I split
out the obvious parts of his patch to implement the client side of SMB3.1.1
compression on write requests (see
https://git.exis.tech/linux.git/patch/?id=40414c6a34081b372e45c7ce5060a6d34779f6ba
for the original patch of Enzo's) but left out the final piece of the patch
(the calls from the write path).

This moves SMB3.1.1 compression code into experimental config option,
and fixes the compress mount option to require that config option.
Also implements unchained LZ77 "plain" compression algorithm as per
MS-XCA specification section "2.3 Plain LZ77 Compression Algorithm Details".

See attached

--
Thanks,

Steve

--000000000000eced3c061e2f3763
Content-Type: text/x-patch; charset="US-ASCII"; 
	name="0001-smb3-mark-compression-as-CONFIG_EXPERIMENTAL-and-fix.patch"
Content-Disposition: attachment; 
	filename="0001-smb3-mark-compression-as-CONFIG_EXPERIMENTAL-and-fix.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_lz3cxfk60>
X-Attachment-Id: f_lz3cxfk60

RnJvbSA3ZGI5YTAwYzRkOWJmNDk5NjE3N2U0OTQ2MjQxODg1MjM0YWZiNWMwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGV2ZSBGcmVuY2ggPHN0ZnJlbmNoQG1pY3Jvc29mdC5jb20+
CkRhdGU6IEZyaSwgMjYgSnVsIDIwMjQgMTY6MzA6MjMgLTA1MDAKU3ViamVjdDogW1BBVENIXSBz
bWIzOiBtYXJrIGNvbXByZXNzaW9uIGFzIENPTkZJR19FWFBFUklNRU5UQUwgYW5kIGZpeCBtaXNz
aW5nCiBjb21wcmVzc2lvbiBvcGVyYXRpb24KCk1vdmUgU01CMy4xLjEgY29tcHJlc3Npb24gY29k
ZSBpbnRvIGV4cGVyaW1lbnRhbCBjb25maWcgb3B0aW9uLAphbmQgZml4IHRoZSBjb21wcmVzcyBt
b3VudCBvcHRpb24uIEltcGxlbWVudCB1bmNoYWluZWQgTFo3NwoicGxhaW4iIGNvbXByZXNzaW9u
IGFsZ29yaXRobSBhcyBwZXIgTVMtWENBIHNwZWNpZmljYXRpb24Kc2VjdGlvbiAiMi4zIFBsYWlu
IExaNzcgQ29tcHJlc3Npb24gQWxnb3JpdGhtIERldGFpbHMiLgoKU2lnbmVkLW9mZi1ieTogRW56
byBNYXRzdW1peWEgPGVtYXRzdW1peWFAc3VzZS5kZT4KU2lnbmVkLW9mZi1ieTogU3RldmUgRnJl
bmNoIDxzdGZyZW5jaEBtaWNyb3NvZnQuY29tPgotLS0KIGZzL3NtYi9jbGllbnQvS2NvbmZpZyAg
ICAgICAgIHwgIDE0ICsrCiBmcy9zbWIvY2xpZW50L01ha2VmaWxlICAgICAgICB8ICAgMiArCiBm
cy9zbWIvY2xpZW50L2NpZnNfZGVidWcuYyAgICB8ICAgNyArLQogZnMvc21iL2NsaWVudC9jaWZz
Z2xvYi5oICAgICAgfCAgIDMgKy0KIGZzL3NtYi9jbGllbnQvY29tcHJlc3MuYyAgICAgIHwgIDUw
ICsrKysrKwogZnMvc21iL2NsaWVudC9jb21wcmVzcy5oICAgICAgfCAxMDkgKysrKysrKysrKysr
KwogZnMvc21iL2NsaWVudC9jb21wcmVzcy9sejc3LmMgfCAyMTEgKysrKysrKysrKysrKysrKysr
KysrKysrKwogZnMvc21iL2NsaWVudC9jb21wcmVzcy9sejc3LmggfCAyODUgKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKwogZnMvc21iL2NsaWVudC9mc19jb250ZXh0LmMgICAgfCAg
IDcgKy0KIDkgZmlsZXMgY2hhbmdlZCwgNjg0IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0p
CiBjcmVhdGUgbW9kZSAxMDA2NDQgZnMvc21iL2NsaWVudC9jb21wcmVzcy5jCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgZnMvc21iL2NsaWVudC9jb21wcmVzcy5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgZnMv
c21iL2NsaWVudC9jb21wcmVzcy9sejc3LmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBmcy9zbWIvY2xp
ZW50L2NvbXByZXNzL2x6NzcuaAoKZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvS2NvbmZpZyBi
L2ZzL3NtYi9jbGllbnQvS2NvbmZpZwppbmRleCAyNTE3ZGMyNDIzODYuLjJhZmY2ZDEzOTVjZSAx
MDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9LY29uZmlnCisrKyBiL2ZzL3NtYi9jbGllbnQvS2Nv
bmZpZwpAQCAtMjA0LDQgKzIwNCwxOCBAQCBjb25maWcgQ0lGU19ST09UCiAKIAkgIE1vc3QgcGVv
cGxlIHNheSBOIGhlcmUuCiAKK2NvbmZpZyBDSUZTX0NPTVBSRVNTSU9OCisJYm9vbCAiU01CIG1l
c3NhZ2UgY29tcHJlc3Npb24gKEV4cGVyaW1lbnRhbCkiCisJZGVwZW5kcyBvbiBDSUZTCisJZGVm
YXVsdCBuCisJaGVscAorCSAgRW5hYmxlcyBvdmVyLXRoZS13aXJlIG1lc3NhZ2UgY29tcHJlc3Np
b24gZm9yIFNNQiAzLjEuMQorCSAgbW91bnRzIHdoZW4gbmVnb3RpYXRlZCB3aXRoIHRoZSBzZXJ2
ZXIuCisKKwkgIE9ubHkgd3JpdGUgcmVxdWVzdHMgd2l0aCBkYXRhIHNpemUgPj0gUEFHRV9TSVpF
IHdpbGwgYmUKKwkgIGNvbXByZXNzZWQgdG8gYXZvaWQgd2FzdGluZyByZXNvdXJjZXMuCisKKwkg
IFNheSBZIGhlcmUgaWYgeW91IHdhbnQgU01CIHRyYWZmaWMgdG8gYmUgY29tcHJlc3NlZC4KKwkg
IElmIHVuc3VyZSwgc2F5IE4uCisKIGVuZGlmCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L01h
a2VmaWxlIGIvZnMvc21iL2NsaWVudC9NYWtlZmlsZQppbmRleCBlMTE5ODVmMjQ2MGIuLjIyMDIz
ZTMwOTE1YiAxMDA2NDQKLS0tIGEvZnMvc21iL2NsaWVudC9NYWtlZmlsZQorKysgYi9mcy9zbWIv
Y2xpZW50L01ha2VmaWxlCkBAIC0zMywzICszMyw1IEBAIGNpZnMtJChDT05GSUdfQ0lGU19TTUJf
RElSRUNUKSArPSBzbWJkaXJlY3QubwogY2lmcy0kKENPTkZJR19DSUZTX1JPT1QpICs9IGNpZnNy
b290Lm8KIAogY2lmcy0kKENPTkZJR19DSUZTX0FMTE9XX0lOU0VDVVJFX0xFR0FDWSkgKz0gc21i
MW9wcy5vIGNpZnNzbWIubworCitjaWZzLSQoQ09ORklHX0NJRlNfQ09NUFJFU1NJT04pICs9IGNv
bXByZXNzLm8gY29tcHJlc3MvbHo3Ny5vCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNf
ZGVidWcuYyBiL2ZzL3NtYi9jbGllbnQvY2lmc19kZWJ1Zy5jCmluZGV4IGM3MWFlNWMwNDMwNi4u
YzNjZmE4ZjdhMzM3IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2NpZnNfZGVidWcuYworKysg
Yi9mcy9zbWIvY2xpZW50L2NpZnNfZGVidWcuYwpAQCAtMzQ5LDYgKzM0OSw5IEBAIHN0YXRpYyBp
bnQgY2lmc19kZWJ1Z19kYXRhX3Byb2Nfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKnYp
CiAJc2VxX3ByaW50ZihtLCAiLEFDTCIpOwogI2lmZGVmIENPTkZJR19DSUZTX1NXTl9VUENBTEwK
IAlzZXFfcHV0cyhtLCAiLFdJVE5FU1MiKTsKKyNlbmRpZgorI2lmZGVmIENPTkZJR19DSUZTX0NP
TVBSRVNTSU9OCisJc2VxX3B1dHMobSwgIixDT01QUkVTU0lPTiIpOwogI2VuZGlmCiAJc2VxX3B1
dGMobSwgJ1xuJyk7CiAJc2VxX3ByaW50ZihtLCAiQ0lGU01heEJ1ZlNpemU6ICVkXG4iLCBDSUZT
TWF4QnVmU2l6ZSk7CkBAIC00NzUsNyArNDc4LDkgQEAgc3RhdGljIGludCBjaWZzX2RlYnVnX2Rh
dGFfcHJvY19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqdikKIAkJfQogCiAJCXNlcV9w
dXRzKG0sICJcbkNvbXByZXNzaW9uOiAiKTsKLQkJaWYgKCFzZXJ2ZXItPmNvbXByZXNzaW9uLnJl
cXVlc3RlZCkKKwkJaWYgKCFJU19FTkFCTEVEKENPTkZJR19DSUZTX0NPTVBSRVNTSU9OKSkKKwkJ
CXNlcV9wdXRzKG0sICJubyBidWlsdC1pbiBzdXBwb3J0Iik7CisJCWVsc2UgaWYgKCFzZXJ2ZXIt
PmNvbXByZXNzaW9uLnJlcXVlc3RlZCkKIAkJCXNlcV9wdXRzKG0sICJkaXNhYmxlZCBvbiBtb3Vu
dCIpOwogCQllbHNlIGlmIChzZXJ2ZXItPmNvbXByZXNzaW9uLmVuYWJsZWQpCiAJCQlzZXFfcHJp
bnRmKG0sICJlbmFibGVkICglcykiLCBjb21wcmVzc2lvbl9hbGdfc3RyKHNlcnZlci0+Y29tcHJl
c3Npb24uYWxnKSk7CmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NpZnNnbG9iLmggYi9mcy9z
bWIvY2xpZW50L2NpZnNnbG9iLmgKaW5kZXggOGU4NmZlYzdkY2QyLi4zYWZlODlmNzAyMTQgMTAw
NjQ0Ci0tLSBhL2ZzL3NtYi9jbGllbnQvY2lmc2dsb2IuaAorKysgYi9mcy9zbWIvY2xpZW50L2Np
ZnNnbG9iLmgKQEAgLTU1Niw3ICs1NTYsNyBAQCBzdHJ1Y3Qgc21iX3ZlcnNpb25fb3BlcmF0aW9u
cyB7CiAJYm9vbCAoKmRpcl9uZWVkc19jbG9zZSkoc3RydWN0IGNpZnNGaWxlSW5mbyAqKTsKIAls
b25nICgqZmFsbG9jYXRlKShzdHJ1Y3QgZmlsZSAqLCBzdHJ1Y3QgY2lmc190Y29uICosIGludCwg
bG9mZl90LAogCQkJICBsb2ZmX3QpOwotCS8qIGluaXQgdHJhbnNmb3JtIHJlcXVlc3QgLSB1c2Vk
IGZvciBlbmNyeXB0aW9uIGZvciBub3cgKi8KKwkvKiBpbml0IHRyYW5zZm9ybSAoY29tcHJlc3Mv
ZW5jcnlwdCkgcmVxdWVzdCAqLwogCWludCAoKmluaXRfdHJhbnNmb3JtX3JxKShzdHJ1Y3QgVENQ
X1NlcnZlcl9JbmZvICosIGludCBudW1fcnFzdCwKIAkJCQkgc3RydWN0IHNtYl9ycXN0ICosIHN0
cnVjdCBzbWJfcnFzdCAqKTsKIAlpbnQgKCppc190cmFuc2Zvcm1faGRyKSh2b2lkICpidWYpOwpA
QCAtMTg5OSw2ICsxODk5LDcgQEAgc3RhdGljIGlubGluZSBib29sIGlzX3JlcGxheWFibGVfZXJy
b3IoaW50IGVycm9yKQogI2RlZmluZSAgIENJRlNfSEFTX0NSRURJVFMgICAgICAgIDB4MDQwMCAv
KiBhbHJlYWR5IGhhcyBjcmVkaXRzICovCiAjZGVmaW5lICAgQ0lGU19UUkFOU0ZPUk1fUkVRICAg
ICAgMHgwODAwIC8qIHRyYW5zZm9ybSByZXF1ZXN0IGJlZm9yZSBzZW5kaW5nICovCiAjZGVmaW5l
ICAgQ0lGU19OT19TUlZfUlNQICAgICAgICAgMHgxMDAwIC8qIHRoZXJlIGlzIG5vIHNlcnZlciBy
ZXNwb25zZSAqLworI2RlZmluZSAgIENJRlNfQ09NUFJFU1NfUkVRICAgICAgIDB4NDAwMCAvKiBj
b21wcmVzcyByZXF1ZXN0IGJlZm9yZSBzZW5kaW5nICovCiAKIC8qIFNlY3VyaXR5IEZsYWdzOiBp
bmRpY2F0ZSB0eXBlIG9mIHNlc3Npb24gc2V0dXAgbmVlZGVkICovCiAjZGVmaW5lICAgQ0lGU1NF
Q19NQVlfU0lHTgkweDAwMDAxCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2NvbXByZXNzLmMg
Yi9mcy9zbWIvY2xpZW50L2NvbXByZXNzLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAwLi40ZWZiY2NiZDQwYmYKLS0tIC9kZXYvbnVsbAorKysgYi9mcy9zbWIvY2xpZW50
L2NvbXByZXNzLmMKQEAgLTAsMCArMSw1MCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAtb25seQorLyoKKyAqIENvcHlyaWdodCAoQykgMjAyNCwgU1VTRSBMTEMKKyAqCisg
KiBBdXRob3JzOiBFbnpvIE1hdHN1bWl5YSA8ZW1hdHN1bWl5YUBzdXNlLmRlPgorICoKKyAqIFRo
aXMgZmlsZSBpbXBsZW1lbnRzIEkvTyBjb21wcmVzc2lvbiBzdXBwb3J0IGZvciBTTUIyIG1lc3Nh
Z2VzIChTTUIgMy4xLjEgb25seSkuCisgKiBTZWUgY29tcHJlc3MvIGZvciBpbXBsZW1lbnRhdGlv
biBkZXRhaWxzIG9mIGVhY2ggYWxnb3JpdGhtLgorICoKKyAqIFJlZmVyZW5jZXM6CisgKiBNUy1T
TUIyICIzLjEuNC40IENvbXByZXNzaW5nIHRoZSBNZXNzYWdlIgorICogTVMtU01CMiAiMy4xLjUu
MyBEZWNvbXByZXNzaW5nIHRoZSBDaGFpbmVkIE1lc3NhZ2UiCisgKiBNUy1YQ0EgLSBmb3IgZGV0
YWlscyBvZiB0aGUgc3VwcG9ydGVkIGFsZ29yaXRobXMKKyAqLworI2luY2x1ZGUgPGxpbnV4L3Ns
YWIuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KKyNpbmNsdWRlIDxsaW51eC91aW8uaD4K
KworI2luY2x1ZGUgImNpZnNnbG9iLmgiCisjaW5jbHVkZSAiLi4vY29tbW9uL3NtYjJwZHUuaCIK
KyNpbmNsdWRlICJjaWZzcHJvdG8uaCIKKyNpbmNsdWRlICJzbWIycHJvdG8uaCIKKworI2luY2x1
ZGUgImNvbXByZXNzL2x6NzcuaCIKKyNpbmNsdWRlICJjb21wcmVzcy5oIgorCitpbnQgc21iX2Nv
bXByZXNzKHZvaWQgKmJ1ZiwgY29uc3Qgdm9pZCAqZGF0YSwgc2l6ZV90ICpsZW4pCit7CisJc3Ry
dWN0IHNtYjJfY29tcHJlc3Npb25faGRyICpoZHI7CisJc2l6ZV90IGJ1Zl9sZW4sIGRhdGFfbGVu
OworCWludCByZXQ7CisKKwlidWZfbGVuID0gc2l6ZW9mKHN0cnVjdCBzbWIyX3dyaXRlX3JlcSk7
CisJZGF0YV9sZW4gPSAqbGVuOworCSpsZW4gPSAwOworCisJaGRyID0gYnVmOworCWhkci0+UHJv
dG9jb2xJZCA9IFNNQjJfQ09NUFJFU1NJT05fVFJBTlNGT1JNX0lEOworCWhkci0+T3JpZ2luYWxD
b21wcmVzc2VkU2VnbWVudFNpemUgPSBjcHVfdG9fbGUzMihkYXRhX2xlbik7CisJaGRyLT5PZmZz
ZXQgPSBjcHVfdG9fbGUzMihidWZfbGVuKTsKKwloZHItPkZsYWdzID0gU01CMl9DT01QUkVTU0lP
Tl9GTEFHX05PTkU7CisJaGRyLT5Db21wcmVzc2lvbkFsZ29yaXRobSA9IFNNQjNfQ09NUFJFU1Nf
TFo3NzsKKworCS8qIFhYWDogYWRkIG90aGVyIGFsZ3MgaGVyZSBhcyB0aGV5J3JlIGltcGxlbWVu
dGVkICovCisJcmV0ID0gbHo3N19jb21wcmVzcyhkYXRhLCBkYXRhX2xlbiwgYnVmICsgU01CX0NP
TVBSRVNTX0hEUl9MRU4gKyBidWZfbGVuLCAmZGF0YV9sZW4pOworCWlmICghcmV0KQorCQkqbGVu
ID0gU01CX0NPTVBSRVNTX0hEUl9MRU4gKyBidWZfbGVuICsgZGF0YV9sZW47CisKKwlyZXR1cm4g
cmV0OworfQpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9jb21wcmVzcy5oIGIvZnMvc21iL2Ns
aWVudC9jb21wcmVzcy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4u
YzBkYWJlMGE2MGQ4Ci0tLSAvZGV2L251bGwKKysrIGIvZnMvc21iL2NsaWVudC9jb21wcmVzcy5o
CkBAIC0wLDAgKzEsMTA5IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1v
bmx5ICovCisvKgorICogQ29weXJpZ2h0IChDKSAyMDI0LCBTVVNFIExMQworICoKKyAqIEF1dGhv
cnM6IEVuem8gTWF0c3VtaXlhIDxlbWF0c3VtaXlhQHN1c2UuZGU+CisgKgorICogVGhpcyBmaWxl
IGltcGxlbWVudHMgSS9PIGNvbXByZXNzaW9uIHN1cHBvcnQgZm9yIFNNQjIgbWVzc2FnZXMgKFNN
QiAzLjEuMSBvbmx5KS4KKyAqIFNlZSBjb21wcmVzcy8gZm9yIGltcGxlbWVudGF0aW9uIGRldGFp
bHMgb2YgZWFjaCBhbGdvcml0aG0uCisgKgorICogUmVmZXJlbmNlczoKKyAqIE1TLVNNQjIgIjMu
MS40LjQgQ29tcHJlc3NpbmcgdGhlIE1lc3NhZ2UiIC0gZm9yIGNvbXByZXNzaW9uIGRldGFpbHMK
KyAqIE1TLVNNQjIgIjMuMS41LjMgRGVjb21wcmVzc2luZyB0aGUgQ2hhaW5lZCBNZXNzYWdlIiAt
IGZvciBkZWNvbXByZXNzaW9uIGRldGFpbHMKKyAqIE1TLVhDQSAtIGZvciBkZXRhaWxzIG9mIHRo
ZSBzdXBwb3J0ZWQgYWxnb3JpdGhtcworICovCisjaWZuZGVmIF9TTUJfQ09NUFJFU1NfSAorI2Rl
ZmluZSBfU01CX0NPTVBSRVNTX0gKKworI2luY2x1ZGUgPGxpbnV4L3Vpby5oPgorI2luY2x1ZGUg
PGxpbnV4L2tlcm5lbC5oPgorI2luY2x1ZGUgIi4uL2NvbW1vbi9zbWIycGR1LmgiCisjaW5jbHVk
ZSAiY2lmc2dsb2IuaCIKKworLyogc2l6ZW9mKHNtYjJfY29tcHJlc3Npb25faGRyKSAtIHNpemVv
ZihPcmlnaW5hbFBheWxvYWRTaXplKSAqLworI2RlZmluZSBTTUJfQ09NUFJFU1NfSERSX0xFTgkJ
MTYKKy8qIHNpemVvZihzbWIyX2NvbXByZXNzaW9uX3BheWxvYWRfaGRyKSAtIHNpemVvZihPcmln
aW5hbFBheWxvYWRTaXplKSAqLworI2RlZmluZSBTTUJfQ09NUFJFU1NfUEFZTE9BRF9IRFJfTEVO
CTgKKyNkZWZpbmUgU01CX0NPTVBSRVNTX01JTl9MRU4JCVBBR0VfU0laRQorCitzdHJ1Y3Qgc21i
X2NvbXByZXNzX2N0eCB7CisJc3RydWN0IFRDUF9TZXJ2ZXJfSW5mbyAqc2VydmVyOworCXN0cnVj
dCB3b3JrX3N0cnVjdCB3b3JrOworCXN0cnVjdCBtaWRfcV9lbnRyeSAqbWlkOworCisJdm9pZCAq
YnVmOyAvKiBjb21wcmVzc2VkIGRhdGEgKi8KKwl2b2lkICpkYXRhOyAvKiB1bmNvbXByZXNzZWQg
ZGF0YSAqLworCXNpemVfdCBsZW47Cit9OworCisjaWZkZWYgQ09ORklHX0NJRlNfQ09NUFJFU1NJ
T04KK2ludCBzbWJfY29tcHJlc3Modm9pZCAqYnVmLCBjb25zdCB2b2lkICpkYXRhLCBzaXplX3Qg
Kmxlbik7CisKKy8qKgorICogc21iX2NvbXByZXNzX2FsZ192YWxpZCgpIC0gVmFsaWRhdGUgYSBj
b21wcmVzc2lvbiBhbGdvcml0aG0uCisgKiBAYWxnOiBDb21wcmVzc2lvbiBhbGdvcml0aG0gdG8g
Y2hlY2suCisgKiBAdmFsaWRfbm9uZTogQ29uZGl0aW9uYWwgY2hlY2sgd2hldGhlciBOT05FIGFs
Z29yaXRobSBzaG91bGQgYmUKKyAqCQljb25zaWRlcmVkIHZhbGlkIG9yIG5vdC4KKyAqCisgKiBJ
ZiBAYWxnIGlzIFNNQjNfQ09NUFJFU1NfTk9ORSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIEB2YWxp
ZF9ub25lLgorICoKKyAqIE5vdGUgdGhhdCAnTk9ORScgKDApIGNvbXByZXNzb3IgdHlwZSBpcyBj
b25zaWRlcmVkIGludmFsaWQgaW4gcHJvdG9jb2wKKyAqIG5lZ290aWF0aW9uLCBhcyBpdCdzIG5l
dmVyIHJlcXVlc3RlZCB0by9yZXR1cm5lZCBmcm9tIHRoZSBzZXJ2ZXIuCisgKgorICogUmV0dXJu
OiB0cnVlIGlmIEBhbGcgaXMgdmFsaWQvc3VwcG9ydGVkLCBmYWxzZSBvdGhlcndpc2UuCisgKi8K
K3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgaW50IHNtYl9jb21wcmVzc19hbGdfdmFsaWQoX19sZTE2
IGFsZywgYm9vbCB2YWxpZF9ub25lKQoreworCWlmIChhbGcgPT0gU01CM19DT01QUkVTU19OT05F
KQorCQlyZXR1cm4gdmFsaWRfbm9uZTsKKworCWlmIChhbGcgPT0gU01CM19DT01QUkVTU19MWjc3
IHx8IGFsZyA9PSBTTUIzX0NPTVBSRVNTX1BBVFRFUk4pCisJCXJldHVybiB0cnVlOworCisJcmV0
dXJuIGZhbHNlOworfQorCisvKioKKyAqIHNob3VsZF9jb21wcmVzcygpIC0gRGV0ZXJtaW5lcyBp
ZiBhIHJlcXVlc3QgKHdyaXRlKSBvciB0aGUgcmVzcG9uc2UgdG8gYQorICoJCSAgICAgICByZXF1
ZXN0IChyZWFkKSBzaG91bGQgYmUgY29tcHJlc3NlZC4KKyAqIEB0Y29uOiB0Y29uIG9mIHRoZSBy
ZXF1ZXN0IGlzIGJlaW5nIHNlbnQgdG8KKyAqIEBidWY6IGJ1ZmZlciB3aXRoIGFuIFNNQjIgUkVB
RC9XUklURSByZXF1ZXN0CisgKgorICogUmV0dXJuOiB0cnVlIGlmZjoKKyAqIC0gY29tcHJlc3Np
b24gd2FzIHN1Y2Nlc3NmdWxseSBuZWdvdGlhdGVkIHdpdGggc2VydmVyCisgKiAtIHNlcnZlciBo
YXMgZW5hYmxlZCBjb21wcmVzc2lvbiBmb3IgdGhlIHNoYXJlCisgKiAtIGl0J3MgYSByZWFkIG9y
IHdyaXRlIHJlcXVlc3QKKyAqIC0gaWYgd3JpdGUsIHJlcXVlc3QgbGVuZ3RoIGlzID49IFNNQl9D
T01QUkVTU19NSU5fTEVOCisgKgorICogUmV0dXJuIGZhbHNlIG90aGVyd2lzZS4KKyAqLworc3Rh
dGljIF9fYWx3YXlzX2lubGluZSBib29sIHNob3VsZF9jb21wcmVzcyhjb25zdCBzdHJ1Y3QgY2lm
c190Y29uICp0Y29uLCBjb25zdCB2b2lkICpidWYpCit7CisJY29uc3Qgc3RydWN0IHNtYjJfaGRy
ICpzaGRyID0gYnVmOworCisJaWYgKCF0Y29uIHx8ICF0Y29uLT5zZXMgfHwgIXRjb24tPnNlcy0+
c2VydmVyKQorCQlyZXR1cm4gZmFsc2U7CisKKwlpZiAoIXRjb24tPnNlcy0+c2VydmVyLT5jb21w
cmVzc2lvbi5lbmFibGVkKQorCQlyZXR1cm4gZmFsc2U7CisKKwlpZiAoISh0Y29uLT5zaGFyZV9m
bGFncyAmIFNNQjJfU0hBUkVGTEFHX0NPTVBSRVNTX0RBVEEpKQorCQlyZXR1cm4gZmFsc2U7CisK
KwlpZiAoc2hkci0+Q29tbWFuZCA9PSBTTUIyX1dSSVRFKSB7CisJCWNvbnN0IHN0cnVjdCBzbWIy
X3dyaXRlX3JlcSAqcmVxID0gYnVmOworCisJCXJldHVybiAocmVxLT5MZW5ndGggPj0gU01CX0NP
TVBSRVNTX01JTl9MRU4pOworCX0KKworCXJldHVybiAoc2hkci0+Q29tbWFuZCA9PSBTTUIyX1JF
QUQpOworfQorLyoKKyAqICNlbHNlICFDT05GSUdfQ0lGU19DT01QUkVTU0lPTiAuLi4KKyAqIFRo
ZXNlIHJvdXRpbmVzIHNob3VsZCBub3QgYmUgY2FsbGVkIHdoZW4gQ09ORklHX0NJRlNfQ09NUFJF
U1NJT04gZGlzYWJsZWQKKyAqICNkZWZpbmUgc21iX2NvbXByZXNzKGFyZzEsIGFyZzIsIGFyZzMp
CQkoLUVPUE5PVFNVUFApCisgKiAjZGVmaW5lIHNtYl9jb21wcmVzc19hbGdfdmFsaWQoYXJnMSwg
YXJnMikJKC1FT1BOT1RTVVBQKQorICogI2RlZmluZSBzaG91bGRfY29tcHJlc3MoYXJnMSwgYXJn
MikJCShmYWxzZSkKKyAqLworI2VuZGlmIC8qICFDT05GSUdfQ0lGU19DT01QUkVTU0lPTiAqLwor
I2VuZGlmIC8qIF9TTUJfQ09NUFJFU1NfSCAqLwpkaWZmIC0tZ2l0IGEvZnMvc21iL2NsaWVudC9j
b21wcmVzcy9sejc3LmMgYi9mcy9zbWIvY2xpZW50L2NvbXByZXNzL2x6NzcuYwpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjJiOGQ1NDhmOTQ5MgotLS0gL2Rldi9udWxs
CisrKyBiL2ZzL3NtYi9jbGllbnQvY29tcHJlc3MvbHo3Ny5jCkBAIC0wLDAgKzEsMjExIEBACisv
LyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CisvKgorICogQ29weXJpZ2h0
IChDKSAyMDI0LCBTVVNFIExMQworICoKKyAqIEF1dGhvcnM6IEVuem8gTWF0c3VtaXlhIDxlbWF0
c3VtaXlhQHN1c2UuZGU+CisgKgorICogSW1wbGVtZW50YXRpb24gb2YgdGhlIExaNzcgInBsYWlu
IiBjb21wcmVzc2lvbiBhbGdvcml0aG0sIGFzIHBlciBNUy1YQ0Egc3BlYy4KKyAqLworI2luY2x1
ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNsdWRlICJsejc3LmgiCisKK3N0YXRpYyBfX2Fsd2F5c19p
bmxpbmUgdTMyIGhhc2gzKGNvbnN0IHU4ICpwdHIpCit7CisJcmV0dXJuIGx6NzdfaGFzaDMyKGx6
NzdfcmVhZDMyKHB0cikgJiAweGZmZmZmZiwgTFo3N19IQVNIX0xPRyk7Cit9CisKK3N0YXRpYyB1
OCAqd3JpdGVfbWF0Y2godTggKmRzdCwgdTggKipuaWIsIHUzMiBkaXN0LCB1MzIgbGVuKQorewor
CWxlbiAtPSAzOworCWRpc3QtLTsKKwlkaXN0IDw8PSAzOworCisJaWYgKGxlbiA8IDcpIHsKKwkJ
bHo3N193cml0ZTE2KGRzdCwgZGlzdCArIGxlbik7CisJCXJldHVybiBkc3QgKyAyOworCX0KKwor
CWRpc3QgfD0gNzsKKwlsejc3X3dyaXRlMTYoZHN0LCBkaXN0KTsKKwlkc3QgKz0gMjsKKwlsZW4g
LT0gNzsKKworCWlmICghKm5pYikgeworCQkqbmliID0gZHN0OworCQlsejc3X3dyaXRlOChkc3Qs
IG1pbl90KHVuc2lnbmVkIGludCwgbGVuLCAxNSkpOworCQlkc3QrKzsKKwl9IGVsc2UgeworCQkq
Km5pYiB8PSBtaW5fdCh1bnNpZ25lZCBpbnQsIGxlbiwgMTUpIDw8IDQ7CisJCSpuaWIgPSBOVUxM
OworCX0KKworCWlmIChsZW4gPCAxNSkKKwkJcmV0dXJuIGRzdDsKKworCWxlbiAtPSAxNTsKKwlp
ZiAobGVuIDwgMjU1KSB7CisJCWx6Nzdfd3JpdGU4KGRzdCwgbGVuKTsKKwkJcmV0dXJuIGRzdCAr
IDE7CisJfQorCisJbHo3N193cml0ZTgoZHN0LCAweGZmKTsKKwlkc3QrKzsKKworCWxlbiArPSA3
ICsgMTU7CisJaWYgKGxlbiA8PSAweGZmZmYpIHsKKwkJbHo3N193cml0ZTE2KGRzdCwgbGVuKTsK
KwkJcmV0dXJuIGRzdCArIDI7CisJfQorCisJbHo3N193cml0ZTE2KGRzdCwgMCk7CisJZHN0ICs9
IDI7CisJbHo3N193cml0ZTMyKGRzdCwgbGVuKTsKKworCXJldHVybiBkc3QgKyA0OworfQorCitz
dGF0aWMgdTggKndyaXRlX2xpdGVyYWxzKHU4ICpkc3QsIGNvbnN0IHU4ICpkc3RfZW5kLCBjb25z
dCB1OCAqc3JjLCBzaXplX3QgY291bnQsCisJCQkgIHN0cnVjdCBsejc3X2ZsYWdzICpmbGFncykK
K3sKKwljb25zdCB1OCAqZW5kID0gc3JjICsgY291bnQ7CisKKwl3aGlsZSAoc3JjIDwgZW5kKSB7
CisJCXNpemVfdCBjID0gbHo3N19taW4oY291bnQsIDMyIC0gZmxhZ3MtPmNvdW50KTsKKworCQlp
ZiAoZHN0ICsgYyA+PSBkc3RfZW5kKQorCQkJcmV0dXJuIEVSUl9QVFIoLUVGQVVMVCk7CisKKwkJ
aWYgKGx6NzdfY29weShkc3QsIHNyYywgYykpCisJCQlyZXR1cm4gRVJSX1BUUigtRUZBVUxUKTsK
KworCQlkc3QgKz0gYzsKKwkJc3JjICs9IGM7CisJCWNvdW50IC09IGM7CisKKwkJZmxhZ3MtPnZh
bCA8PD0gYzsKKwkJZmxhZ3MtPmNvdW50ICs9IGM7CisJCWlmIChmbGFncy0+Y291bnQgPT0gMzIp
IHsKKwkJCWx6Nzdfd3JpdGUzMihmbGFncy0+cG9zLCBmbGFncy0+dmFsKTsKKwkJCWZsYWdzLT5j
b3VudCA9IDA7CisJCQlmbGFncy0+cG9zID0gZHN0OworCQkJZHN0ICs9IDQ7CisJCX0KKwl9CisK
KwlyZXR1cm4gZHN0OworfQorCitzdGF0aWMgX19hbHdheXNfaW5saW5lIGJvb2wgaXNfdmFsaWRf
bWF0Y2goY29uc3QgdTMyIGRpc3QsIGNvbnN0IHUzMiBsZW4pCit7CisJcmV0dXJuIChkaXN0ID49
IExaNzdfTUFUQ0hfTUlOX0RJU1QgJiYgZGlzdCA8IExaNzdfTUFUQ0hfTUFYX0RJU1QpICYmCisJ
ICAgICAgIChsZW4gPj0gTFo3N19NQVRDSF9NSU5fTEVOICYmIGxlbiA8IExaNzdfTUFUQ0hfTUFY
X0xFTik7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgY29uc3QgdTggKmZpbmRfbWF0Y2go
dTMyICpodGFibGUsIGNvbnN0IHU4ICpiYXNlLCBjb25zdCB1OCAqY3VyLAorCQkJCQkgICAgY29u
c3QgdTggKmVuZCwgdTMyICpiZXN0X2xlbikKK3sKKwljb25zdCB1OCAqbWF0Y2g7CisJdTMyIGhh
c2g7CisJc2l6ZV90IG9mZnNldDsKKworCWhhc2ggPSBoYXNoMyhjdXIpOworCW9mZnNldCA9IGN1
ciAtIGJhc2U7CisKKwlpZiAoaHRhYmxlW2hhc2hdID49IG9mZnNldCkKKwkJcmV0dXJuIGN1cjsK
KworCW1hdGNoID0gYmFzZSArIGh0YWJsZVtoYXNoXTsKKwkqYmVzdF9sZW4gPSBsejc3X21hdGNo
KG1hdGNoLCBjdXIsIGVuZCk7CisJaWYgKGlzX3ZhbGlkX21hdGNoKGN1ciAtIG1hdGNoLCAqYmVz
dF9sZW4pKQorCQlyZXR1cm4gbWF0Y2g7CisKKwlyZXR1cm4gY3VyOworfQorCitpbnQgbHo3N19j
b21wcmVzcyhjb25zdCB1OCAqc3JjLCBzaXplX3Qgc3JjX2xlbiwgdTggKmRzdCwgc2l6ZV90ICpk
c3RfbGVuKQoreworCWNvbnN0IHU4ICpzcmNwLCAqc3JjX2VuZCwgKmFuY2hvcjsKKwlzdHJ1Y3Qg
bHo3N19mbGFncyBmbGFncyA9IHsgMCB9OworCXU4ICpkc3RwLCAqZHN0X2VuZCwgKm5pYjsKKwl1
MzIgKmh0YWJsZTsKKwlpbnQgcmV0OworCisJc3JjcCA9IHNyYzsKKwlhbmNob3IgPSBzcmNwOwor
CXNyY19lbmQgPSBzcmMgKyBzcmNfbGVuOworCisJZHN0cCA9IGRzdDsKKwlkc3RfZW5kID0gZHN0
ICsgKmRzdF9sZW47CisJZmxhZ3MucG9zID0gZHN0cDsKKwluaWIgPSBOVUxMOworCisJbWVtc2V0
KGRzdHAsIDAsICpkc3RfbGVuKTsKKwlkc3RwICs9IDQ7CisKKwlodGFibGUgPSBrdmNhbGxvYyhM
Wjc3X0hBU0hfU0laRSwgc2l6ZW9mKHUzMiksIEdGUF9LRVJORUwpOworCWlmICghaHRhYmxlKQor
CQlyZXR1cm4gLUVOT01FTTsKKworCS8qIGZpbGwgaGFzaHRhYmxlIHdpdGggaW52YWxpZCBvZmZz
ZXRzICovCisJbWVtc2V0KGh0YWJsZSwgMHhmZiwgTFo3N19IQVNIX1NJWkUgKiBzaXplb2YodTMy
KSk7CisKKwkvKiBmcm9tIGhlcmUgb24sIGFueSBlcnJvciBpcyBiZWNhdXNlIEBkc3RfbGVuIHJl
YWNoZWQgPj0gQHNyY19sZW4gKi8KKwlyZXQgPSAtRU1TR1NJWkU7CisKKwkvKiBtYWluIGxvb3Ag
Ki8KKwl3aGlsZSAoc3JjcCA8IHNyY19lbmQpIHsKKwkJdTMyIGhhc2gsIGRpc3QsIGxlbjsKKwkJ
Y29uc3QgdTggKm1hdGNoOworCisJCXdoaWxlIChzcmNwICsgMyA8IHNyY19lbmQpIHsKKwkJCWxl
biA9IExaNzdfTUFUQ0hfTUlOX0xFTiAtIDE7CisJCQltYXRjaCA9IGZpbmRfbWF0Y2goaHRhYmxl
LCBzcmMsIHNyY3AsIHNyY19lbmQsICZsZW4pOworCQkJaGFzaCA9IGhhc2gzKHNyY3ApOworCQkJ
aHRhYmxlW2hhc2hdID0gc3JjcCAtIHNyYzsKKworCQkJaWYgKGxpa2VseShtYXRjaCA8IHNyY3Ap
KSB7CisJCQkJZGlzdCA9IHNyY3AgLSBtYXRjaDsKKwkJCQlicmVhazsKKwkJCX0KKworCQkJc3Jj
cCsrOworCQl9CisKKwkJZHN0cCA9IHdyaXRlX2xpdGVyYWxzKGRzdHAsIGRzdF9lbmQsIGFuY2hv
ciwgc3JjcCAtIGFuY2hvciwgJmZsYWdzKTsKKwkJaWYgKElTX0VSUihkc3RwKSkKKwkJCWdvdG8g
ZXJyX2ZyZWU7CisKKwkJaWYgKHNyY3AgKyAzID49IHNyY19lbmQpCisJCQlnb3RvIGxlZnRvdmVy
czsKKworCQlkc3RwID0gd3JpdGVfbWF0Y2goZHN0cCwgJm5pYiwgZGlzdCwgbGVuKTsKKwkJc3Jj
cCArPSBsZW47CisJCWFuY2hvciA9IHNyY3A7CisKKwkJZmxhZ3MudmFsID0gKGZsYWdzLnZhbCA8
PCAxKSB8IDE7CisJCWZsYWdzLmNvdW50Kys7CisJCWlmIChmbGFncy5jb3VudCA9PSAzMikgewor
CQkJbHo3N193cml0ZTMyKGZsYWdzLnBvcywgZmxhZ3MudmFsKTsKKwkJCWZsYWdzLmNvdW50ID0g
MDsKKwkJCWZsYWdzLnBvcyA9IGRzdHA7CisJCQlkc3RwICs9IDQ7CisJCX0KKwl9CitsZWZ0b3Zl
cnM6CisJaWYgKHNyY3AgPCBzcmNfZW5kKSB7CisJCWRzdHAgPSB3cml0ZV9saXRlcmFscyhkc3Rw
LCBkc3RfZW5kLCBzcmNwLCBzcmNfZW5kIC0gc3JjcCwgJmZsYWdzKTsKKwkJaWYgKElTX0VSUihk
c3RwKSkKKwkJCWdvdG8gZXJyX2ZyZWU7CisJfQorCisJZmxhZ3MudmFsIDw8PSAoMzIgLSBmbGFn
cy5jb3VudCk7CisJZmxhZ3MudmFsIHw9ICgxIDw8ICgzMiAtIGZsYWdzLmNvdW50KSkgLSAxOwor
CWx6Nzdfd3JpdGUzMihmbGFncy5wb3MsIGZsYWdzLnZhbCk7CisKKwkqZHN0X2xlbiA9IGRzdHAg
LSBkc3Q7CisJcmV0ID0gMDsKK2Vycl9mcmVlOgorCWt2ZnJlZShodGFibGUpOworCisJcmV0dXJu
IHJldDsKK30KZGlmZiAtLWdpdCBhL2ZzL3NtYi9jbGllbnQvY29tcHJlc3MvbHo3Ny5oIGIvZnMv
c21iL2NsaWVudC9jb21wcmVzcy9sejc3LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAwLi4wY2M5YzZhYmY4NDAKLS0tIC9kZXYvbnVsbAorKysgYi9mcy9zbWIvY2xpZW50
L2NvbXByZXNzL2x6NzcuaApAQCAtMCwwICsxLDI4NSBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAtb25seSAqLworLyoKKyAqIENvcHlyaWdodCAoQykgMjAyNCwgU1VTRSBM
TEMKKyAqCisgKiBBdXRob3JzOiBFbnpvIE1hdHN1bWl5YSA8ZW1hdHN1bWl5YUBzdXNlLmRlPgor
ICoKKyAqIERlZmluaXRpb25zIGFuZCBvcHRtaXplZCBoZWxwZXJzIGZvciBMWjc3IGNvbXByZXNz
aW9uLgorICovCisjaWZuZGVmIF9TTUJfQ09NUFJFU1NfTFo3N19ICisjZGVmaW5lIF9TTUJfQ09N
UFJFU1NfTFo3N19ICisKKyNpZmRlZiBDT05GSUdfQ0lGU19DT01QUkVTU0lPTgorI2luY2x1ZGUg
PGFzbS9wdHJhY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KKyNpbmNsdWRlIDxsaW51
eC9zdHJpbmcuaD4KKyNpZm5kZWYgQ09ORklHX0hBVkVfRUZGSUNJRU5UX1VOQUxJR05FRF9BQ0NF
U1MKKyNpbmNsdWRlIDxhc20tZ2VuZXJpYy91bmFsaWduZWQuaD4KKyNlbmRpZgorCisjZGVmaW5l
IExaNzdfSEFTSF9MT0cJCTEzCisjZGVmaW5lIExaNzdfSEFTSF9TSVpFCQkoMSA8PCBMWjc3X0hB
U0hfTE9HKQorI2RlZmluZSBMWjc3X0hBU0hfTUFTSwkJbHo3N19oYXNoX21hc2soTFo3N19IQVNI
X0xPRykKKworLyogV2UgY2FuIGluY3JlYXNlIHRoaXMgZm9yIGJldHRlciBjb21wcmVzc2lvbiAo
YnV0IHdvcnNlIHBlcmZvcm1hbmNlKS4gKi8KKyNkZWZpbmUgTFo3N19NQVRDSF9NSU5fTEVOCTMK
Ky8qIEZyb20gTVMtWENBLCBidXQgaXQncyBhcmJpdHJhcmlseSBjaG9zZW4uICovCisjZGVmaW5l
IExaNzdfTUFUQ0hfTUFYX0xFTglTMzJfTUFYCisvKgorICogQ2hlY2sgdGhpcyB0byBlbnN1cmUg
d2UgZG9uJ3QgbWF0Y2ggdGhlIGN1cnJlbnQgcG9zaXRpb24sIHdoaWNoIHdvdWxkCisgKiBlbmQg
dXAgZG9pbmcgYSB2ZXJiYXRpbSBjb3B5IG9mIHRoZSBpbnB1dCwgYW5kIGFjdHVhbGx5IG92ZXJm
bG93aW5nCisgKiB0aGUgb3V0cHV0IGJ1ZmZlciBiZWNhdXNlIG9mIHRoZSBlbmNvZGVkIG1ldGFk
YXRhLgorICovCisjZGVmaW5lIExaNzdfTUFUQ0hfTUlOX0RJU1QJMQorLyogSG93IGZhciBiYWNr
IGluIHRoZSBidWZmZXIgY2FuIHdlIHRyeSB0byBmaW5kIGEgbWF0Y2ggKGkuZS4gd2luZG93IHNp
emUpICovCisjZGVmaW5lIExaNzdfTUFUQ0hfTUFYX0RJU1QJODE5MgorCisjZGVmaW5lIExaNzdf
U1RFUFNJWkVfMTYJc2l6ZW9mKHUxNikKKyNkZWZpbmUgTFo3N19TVEVQU0laRV8zMglzaXplb2Yo
dTMyKQorI2RlZmluZSBMWjc3X1NURVBTSVpFXzY0CXNpemVvZih1NjQpCisKK3N0cnVjdCBsejc3
X2ZsYWdzIHsKKwl1OCAqcG9zOworCXNpemVfdCBjb3VudDsKKwlsb25nIHZhbDsKK307CisKK3N0
YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTMyIGx6NzdfaGFzaF9tYXNrKGNvbnN0IHVuc2lnbmVkIGlu
dCBsb2cyKQoreworCXJldHVybiAoKDEgPDwgbG9nMikgLSAxKTsKK30KKworc3RhdGljIF9fYWx3
YXlzX2lubGluZSB1MzIgbHo3N19oYXNoNjQoY29uc3QgdTY0IHYsIGNvbnN0IHVuc2lnbmVkIGlu
dCBsb2cyKQoreworCWNvbnN0IHU2NCBwcmltZTVieXRlcyA9IDg4OTUyMzU5MjM3OVVMTDsKKwor
CXJldHVybiAodTMyKSgoKHYgPDwgMjQpICogcHJpbWU1Ynl0ZXMpID4+ICg2NCAtIGxvZzIpKTsK
K30KKworc3RhdGljIF9fYWx3YXlzX2lubGluZSB1MzIgbHo3N19oYXNoMzIoY29uc3QgdTMyIHYs
IGNvbnN0IHVuc2lnbmVkIGludCBsb2cyKQoreworCXJldHVybiAoKHYgKiAyNjU0NDM1NzY5TEwp
ID4+ICgzMiAtIGxvZzIpKSAmIGx6NzdfaGFzaF9tYXNrKGxvZzIpOworfQorCitzdGF0aWMgX19h
bHdheXNfaW5saW5lIHUzMiBsejc3X2xvZzIodW5zaWduZWQgaW50IHgpCit7CisJcmV0dXJuIHgg
PyAoKHUzMikoMzEgLSBfX2J1aWx0aW5fY2x6KHgpKSkgOiAwOworfQorCisjaWZkZWYgQ09ORklH
X0hBVkVfRUZGSUNJRU5UX1VOQUxJR05FRF9BQ0NFU1MKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUg
dTggbHo3N19yZWFkOChjb25zdCB2b2lkICpwdHIpCit7CisJcmV0dXJuICoodTggKilwdHI7Cit9
CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTE2IGx6NzdfcmVhZDE2KGNvbnN0IHZvaWQgKnB0
cikKK3sKKwlyZXR1cm4gKih1MTYgKilwdHI7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUg
dTMyIGx6NzdfcmVhZDMyKGNvbnN0IHZvaWQgKnB0cikKK3sKKwlyZXR1cm4gKih1MzIgKilwdHI7
Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTY0IGx6NzdfcmVhZDY0KGNvbnN0IHZvaWQg
KnB0cikKK3sKKwlyZXR1cm4gKih1NjQgKilwdHI7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxp
bmUgdm9pZCBsejc3X3dyaXRlOCh2b2lkICpwdHIsIGNvbnN0IHU4IHYpCit7CisJKih1OCAqKXB0
ciA9IHY7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBsejc3X3dyaXRlMTYodm9p
ZCAqcHRyLCBjb25zdCB1MTYgdikKK3sKKwkqKHUxNiAqKXB0ciA9IHY7Cit9CisKK3N0YXRpYyBf
X2Fsd2F5c19pbmxpbmUgdm9pZCBsejc3X3dyaXRlMzIodm9pZCAqcHRyLCBjb25zdCB1MzIgdikK
K3sKKwkqKHUzMiAqKXB0ciA9IHY7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBs
ejc3X3dyaXRlNjQodm9pZCAqcHRyLCBjb25zdCB1NjQgdikKK3sKKwkqKHU2NCAqKXB0ciA9IHY7
Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBsejc3X3dyaXRlX3B0cjE2KHZvaWQg
KnB0ciwgY29uc3Qgdm9pZCAqdnApCit7CisJKih1MTYgKilwdHIgPSAqKGNvbnN0IHUxNiAqKXZw
OworfQorCitzdGF0aWMgX19hbHdheXNfaW5saW5lIHZvaWQgbHo3N193cml0ZV9wdHIzMih2b2lk
ICpwdHIsIGNvbnN0IHZvaWQgKnZwKQoreworCSoodTMyICopcHRyID0gKihjb25zdCB1MzIgKil2
cDsKK30KKworc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIGx6Nzdfd3JpdGVfcHRyNjQodm9p
ZCAqcHRyLCBjb25zdCB2b2lkICp2cCkKK3sKKwkqKHU2NCAqKXB0ciA9ICooY29uc3QgdTY0ICop
dnA7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgbG9uZyBsejc3X2NvcHkodTggKmRzdCwg
Y29uc3QgdTggKnNyYywgc2l6ZV90IGNvdW50KQoreworCXJldHVybiBjb3B5X2Zyb21fa2VybmVs
X25vZmF1bHQoZHN0LCBzcmMsIGNvdW50KTsKK30KKyNlbHNlIC8qIENPTkZJR19IQVZFX0VGRklD
SUVOVF9VTkFMSUdORURfQUNDRVNTICovCitzdGF0aWMgX19hbHdheXNfaW5saW5lIHU4IGx6Nzdf
cmVhZDgoY29uc3Qgdm9pZCAqcHRyKQoreworCXJldHVybiBnZXRfdW5hbGlnbmVkKCh1OCAqKXB0
cik7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTE2IGx6NzdfcmVhZDE2KGNvbnN0IHZv
aWQgKnB0cikKK3sKKwlyZXR1cm4gbHo3N19yZWFkOChwdHIpIHwgKGx6NzdfcmVhZDgocHRyICsg
MSkgPDwgOCk7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTMyIGx6NzdfcmVhZDMyKGNv
bnN0IHZvaWQgKnB0cikKK3sKKwlyZXR1cm4gbHo3N19yZWFkMTYocHRyKSB8IChsejc3X3JlYWQx
NihwdHIgKyAyKSA8PCAxNik7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdTY0IGx6Nzdf
cmVhZDY0KGNvbnN0IHZvaWQgKnB0cikKK3sKKwlyZXR1cm4gbHo3N19yZWFkMzIocHRyKSB8ICgo
dTY0KWx6NzdfcmVhZDMyKHB0ciArIDQpIDw8IDMyKTsKK30KKworc3RhdGljIF9fYWx3YXlzX2lu
bGluZSB2b2lkIGx6Nzdfd3JpdGU4KHZvaWQgKnB0ciwgY29uc3QgdTggdikKK3sKKwlwdXRfdW5h
bGlnbmVkKHYsICh1OCAqKXB0cik7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBs
ejc3X3dyaXRlMTYodm9pZCAqcHRyLCBjb25zdCB1MTYgdikKK3sKKwlsejc3X3dyaXRlOChwdHIs
IHYgJiAweGZmKTsKKwlsejc3X3dyaXRlOChwdHIgKyAxLCAodiA+PiA4KSAmIDB4ZmYpOworfQor
CitzdGF0aWMgX19hbHdheXNfaW5saW5lIHZvaWQgbHo3N193cml0ZTMyKHZvaWQgKnB0ciwgY29u
c3QgdTMyIHYpCit7CisJbHo3N193cml0ZTE2KHB0ciwgdiAmIDB4ZmZmZik7CisJbHo3N193cml0
ZTE2KHB0ciArIDIsICh2ID4+IDE2KSAmIDB4ZmZmZik7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19p
bmxpbmUgdm9pZCBsejc3X3dyaXRlNjQodm9pZCAqcHRyLCBjb25zdCB1NjQgdikKK3sKKwlsejc3
X3dyaXRlMzIocHRyLCB2ICYgMHhmZmZmZmZmZik7CisJbHo3N193cml0ZTMyKHB0ciArIDQsICh2
ID4+IDMyKSAmIDB4ZmZmZmZmZmYpOworfQorCitzdGF0aWMgX19hbHdheXNfaW5saW5lIHZvaWQg
bHo3N193cml0ZV9wdHIxNih2b2lkICpwdHIsIGNvbnN0IHZvaWQgKnZwKQoreworCWNvbnN0IHUx
NiB2ID0gbHo3N19yZWFkMTYodnApOworCisJbHo3N193cml0ZTE2KHB0ciwgdik7Cit9CisKK3N0
YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBsejc3X3dyaXRlX3B0cjMyKHZvaWQgKnB0ciwgY29u
c3Qgdm9pZCAqdnApCit7CisJY29uc3QgdTMyIHYgPSBsejc3X3JlYWQzMih2cCk7CisKKwlsejc3
X3dyaXRlMzIocHRyLCB2KTsKK30KKworc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIGx6Nzdf
d3JpdGVfcHRyNjQodm9pZCAqcHRyLCBjb25zdCB2b2lkICp2cCkKK3sKKwljb25zdCB1NjQgdiA9
IGx6NzdfcmVhZDY0KHZwKTsKKworCWx6Nzdfd3JpdGU2NChwdHIsIHYpOworfQorc3RhdGljIF9f
YWx3YXlzX2lubGluZSBsb25nIGx6NzdfY29weSh1OCAqZHN0LCBjb25zdCB1OCAqc3JjLCBzaXpl
X3QgY291bnQpCit7CisJbWVtY3B5KGRzdCwgc3JjLCBjb3VudCk7CisJcmV0dXJuIDA7Cit9Cisj
ZW5kaWYgLyogIUNPTkZJR19IQVZFX0VGRklDSUVOVF9VTkFMSUdORURfQUNDRVNTICovCisKK3N0
YXRpYyBfX2Fsd2F5c19pbmxpbmUgdW5zaWduZWQgaW50IF9fY291bnRfY29tbW9uX2J5dGVzKGNv
bnN0IHVuc2lnbmVkIGxvbmcgZGlmZikKK3sKKyNpZmRlZiBfX2hhc19idWlsdGluCisjICBpZiBf
X2hhc19idWlsdGluKF9fYnVpbHRpbl9jdHpsbCkKKwlyZXR1cm4gKHVuc2lnbmVkIGludClfX2J1
aWx0aW5fY3R6bGwoZGlmZikgPj4gMzsKKyMgIGVuZGlmCisjZWxzZQorCS8qIGNvdW50IHRyYWls
aW5nIHplcm9lcyAqLworCXVuc2lnbmVkIGxvbmcgYml0cyA9IDAsIGksIHogPSAwOworCisJYml0
cyB8PSBkaWZmOworCWZvciAoaSA9IDA7IGkgPCA2NDsgaSsrKSB7CisJCWlmIChiaXRzW2ldKQor
CQkJYnJlYWs7CisJCXorKzsKKwl9CisKKwlyZXR1cm4gKHVuc2lnbmVkIGludCl6ID4+IDM7Cisj
ZW5kaWYKK30KKworc3RhdGljIF9fYWx3YXlzX2lubGluZSBzaXplX3QgbHo3N19tYXRjaChjb25z
dCB1OCAqbWF0Y2gsIGNvbnN0IHU4ICpjdXIsIGNvbnN0IHU4ICplbmQpCit7CisJY29uc3QgdTgg
KnN0YXJ0ID0gY3VyOworCisJaWYgKGN1ciA9PSBtYXRjaCkKKwkJcmV0dXJuIDA7CisKKwlpZiAo
bGlrZWx5KGN1ciA8IGVuZCAtIChMWjc3X1NURVBTSVpFXzY0IC0gMSkpKSB7CisJCXU2NCBjb25z
dCBkaWZmID0gbHo3N19yZWFkNjQoY3VyKSBeIGx6NzdfcmVhZDY0KG1hdGNoKTsKKworCQlpZiAo
IWRpZmYpIHsKKwkJCWN1ciArPSBMWjc3X1NURVBTSVpFXzY0OworCQkJbWF0Y2ggKz0gTFo3N19T
VEVQU0laRV82NDsKKwkJfSBlbHNlIHsKKwkJCXJldHVybiBfX2NvdW50X2NvbW1vbl9ieXRlcyhk
aWZmKTsKKwkJfQorCX0KKworCXdoaWxlIChsaWtlbHkoY3VyIDwgZW5kIC0gKExaNzdfU1RFUFNJ
WkVfNjQgLSAxKSkpIHsKKwkJdTY0IGNvbnN0IGRpZmYgPSBsejc3X3JlYWQ2NChjdXIpIF4gbHo3
N19yZWFkNjQobWF0Y2gpOworCisJCWlmICghZGlmZikgeworCQkJY3VyICs9IExaNzdfU1RFUFNJ
WkVfNjQ7CisJCQltYXRjaCArPSBMWjc3X1NURVBTSVpFXzY0OworCQkJY29udGludWU7CisJCX0K
KworCQljdXIgKz0gX19jb3VudF9jb21tb25fYnl0ZXMoZGlmZik7CisJCXJldHVybiAoc2l6ZV90
KShjdXIgLSBzdGFydCk7CisJfQorCisJaWYgKGN1ciA8IGVuZCAtIDMgJiYgIShsejc3X3JlYWQz
MihjdXIpIF4gbHo3N19yZWFkMzIobWF0Y2gpKSkgeworCQljdXIgKz0gTFo3N19TVEVQU0laRV8z
MjsKKwkJbWF0Y2ggKz0gTFo3N19TVEVQU0laRV8zMjsKKwl9CisKKwlpZiAoY3VyIDwgZW5kIC0g
MSAmJiBsejc3X3JlYWQxNihjdXIpID09IGx6NzdfcmVhZDE2KG1hdGNoKSkgeworCQljdXIgKz0g
TFo3N19TVEVQU0laRV8xNjsKKwkJbWF0Y2ggKz0gTFo3N19TVEVQU0laRV8xNjsKKwl9CisKKwlp
ZiAoY3VyIDwgZW5kICYmICpjdXIgPT0gKm1hdGNoKQorCQljdXIrKzsKKworCXJldHVybiAoc2l6
ZV90KShjdXIgLSBzdGFydCk7Cit9CisKK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdW5zaWduZWQg
bG9uZyBsejc3X21heCh1bnNpZ25lZCBsb25nIGEsIHVuc2lnbmVkIGxvbmcgYikKK3sKKwlpbnQg
bSA9IChhIDwgYikgLSAxOworCisJcmV0dXJuIChhICYgbSkgfCAoYiAmIH5tKTsKK30KKworc3Rh
dGljIF9fYWx3YXlzX2lubGluZSB1bnNpZ25lZCBsb25nIGx6NzdfbWluKHVuc2lnbmVkIGxvbmcg
YSwgdW5zaWduZWQgbG9uZyBiKQoreworCWludCBtID0gKGEgPiBiKSAtIDE7CisKKwlyZXR1cm4g
KGEgJiBtKSB8IChiICYgfm0pOworfQorCitpbnQgbHo3N19jb21wcmVzcyhjb25zdCB1OCAqc3Jj
LCBzaXplX3Qgc3JjX2xlbiwgdTggKmRzdCwgc2l6ZV90ICpkc3RfbGVuKTsKKy8qIHdoZW4gQ09O
RklHX0NJRlNfQ09NUFJFU1NJT04gbm90IHNldCBsejc3X2NvbXByZXNzKCkgaXMgbm90IGNhbGxl
ZCAqLworI2VuZGlmIC8qICFDT05GSUdfQ0lGU19DT01QUkVTU0lPTiAqLworI2VuZGlmIC8qIF9T
TUJfQ09NUFJFU1NfTFo3N19IICovCmRpZmYgLS1naXQgYS9mcy9zbWIvY2xpZW50L2ZzX2NvbnRl
eHQuYyBiL2ZzL3NtYi9jbGllbnQvZnNfY29udGV4dC5jCmluZGV4IGJjOTI2YWIyNTU1Yi4uMjBk
YzMxYTA3YTU2IDEwMDY0NAotLS0gYS9mcy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuYworKysgYi9m
cy9zbWIvY2xpZW50L2ZzX2NvbnRleHQuYwpAQCAtOTc4LDkgKzk3OCwxMiBAQCBzdGF0aWMgaW50
IHNtYjNfZnNfY29udGV4dF9wYXJzZV9wYXJhbShzdHJ1Y3QgZnNfY29udGV4dCAqZmMsCiAKIAlz
d2l0Y2ggKG9wdCkgewogCWNhc2UgT3B0X2NvbXByZXNzOgorCQlpZiAoIUlTX0VOQUJMRUQoQ09O
RklHX0NJRlNfQ09NUFJFU1NJT04pKSB7CisJCQljaWZzX2Vycm9yZihmYywgIkNPTkZJR19DSUZT
X0NPTVBSRVNTSU9OIGtlcm5lbCBjb25maWcgb3B0aW9uIGlzIHVuc2V0XG4iKTsKKwkJCWdvdG8g
Y2lmc19wYXJzZV9tb3VudF9lcnI7CisJCX0KIAkJY3R4LT5jb21wcmVzcyA9IHRydWU7Ci0JCWNp
ZnNfZGJnKFZGUywKLQkJCSJTTUIzIGNvbXByZXNzaW9uIHN1cHBvcnQgaXMgZXhwZXJpbWVudGFs
XG4iKTsKKwkJY2lmc19kYmcoVkZTLCAiU01CMyBjb21wcmVzc2lvbiBzdXBwb3J0IGlzIGV4cGVy
aW1lbnRhbFxuIik7CiAJCWJyZWFrOwogCWNhc2UgT3B0X25vZGZzOgogCQljdHgtPm5vZGZzID0g
MTsKLS0gCjIuNDMuMAoK
--000000000000eced3c061e2f3763--

