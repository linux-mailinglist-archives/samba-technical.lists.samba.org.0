Return-Path: <samba-technical-bounces@lists.samba.org>
X-Original-To: lists+samba-technical@lfdr.de
Delivered-To: lists+samba-technical@lfdr.de
Received: from hr1.samba.org (hr1.samba.org [IPv6:2a01:4f8:192:486::1:0])
	by mail.lfdr.de (Postfix) with ESMTPS id 982C4990B5
	for <lists+samba-technical@lfdr.de>; Thu, 22 Aug 2019 12:27:36 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.samba.org; s=2954282; h=Cc:From:List-Id:Date:To:Subject;
	bh=uUiZ3LDwlbWbZHFB1Bg6Ye06lyQPWwoQLbv4rrta7K0=; b=PzJQnHdAaNG+GWHsfpF52c0SOg
	yyXjW6z+q4kE0zv9RCDlDNTUl0T6CRrJ7xY+I2aD/PNcLTl4YLb2/SNBVbRHroM8asYQf4+86kN9+
	+FgCvugLSKFk9oLT4l0Ibo+EH5tJmu5fOVm7OfCxxznOqLeh3jRs0kaVlzhW6/CISoe7BYr6NvJXa
	V8FvesbqESSr5BolzlwfBSl/Roj8ss3LlDnyu+94F8AoNSpnuRqosVqyKHjuAqIaQYG3Thc/fYQLk
	lPOrIldEeZNuOpu+/bXk+FQT0ky0UVvLigt/lNvKRQZoe3wRAQPjc5r+iIdky7kys8eLdPDdHoSvO
	5oZpZEaQ==;
Received: from localhost ([::1]:34202 helo=hr1.samba.org) 
	by hr1.samba.org with esmtp (Exim)
	id 1i0kJR-007Xz6-6N; Thu, 22 Aug 2019 10:27:25 +0000
Received: from confino.investici.org ([212.103.72.250]:63075) 
 by hr1.samba.org with esmtps (TLS1.2:ECDHE_RSA_CHACHA20_POLY1305:256)
 (Exim) id 1i0kJL-007Xyz-Rn
 for samba-technical@lists.samba.org; Thu, 22 Aug 2019 10:27:22 +0000
Received: from mx1.investici.org (localhost [127.0.0.1])
 by confino.investici.org (Postfix) with ESMTP id 1620F20EFE;
 Thu, 22 Aug 2019 10:17:09 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=cryptolab.net;
 s=stigmate; t=1566469029;
 bh=uUiZ3LDwlbWbZHFB1Bg6Ye06lyQPWwoQLbv4rrta7K0=;
 h=Subject:From:To:Cc:Date:In-Reply-To:References:From;
 b=WJwzqj8nXCf6Yz9czqhRejXKjhqssX50Xo7VEJ849OfBFaz1HMMIJcGTXjHh2Jie2
 LjI3AUl9cxvPLb1GGeknGJIg/fPZz1U3YmNJGI8dHKMpJyIwuhsB1G6sN0TWPj3paI
 CG1Cg6wbvC+MKFxfy+70b7IPzwSdXH2TGKH9H5m8=
Received: from [212.103.72.250] (mx1.investici.org [212.103.72.250])
 (Authenticated sender: anoopcs@autistici.org) by localhost (Postfix) with
 ESMTPSA id 3040421161; Thu, 22 Aug 2019 10:17:02 +0000 (UTC)
Message-ID: <5120a5d92b02176052c2fd7cd021c2014a87758e.camel@cryptolab.net>
Subject: Re: [PATCH] Use pthreadpool for aio scheduling in vfs_glusterfs
To: samba-technical <samba-technical@lists.samba.org>
Date: Thu, 22 Aug 2019 15:46:55 +0530
In-Reply-To: <dbaed65e1d71d7cf5da358359f2f071204a2a8a0.camel@cryptolab.net>
References: <dbaed65e1d71d7cf5da358359f2f071204a2a8a0.camel@cryptolab.net>
Content-Type: multipart/mixed; boundary="=-lnxZaMKuDY//izoPdY9y"
User-Agent: Evolution 3.32.4 (3.32.4-1.fc30) 
MIME-Version: 1.0
X-BeenThere: samba-technical@lists.samba.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Discussions on Samba internals. For general questions please
 subscribe to the list samba@lists.samba.org"
 <samba-technical.lists.samba.org>
List-Unsubscribe: <https://lists.samba.org/mailman/options/samba-technical>,
 <mailto:samba-technical-request@lists.samba.org?subject=unsubscribe>
List-Archive: <http://lists.samba.org/pipermail/samba-technical/>
List-Post: <mailto:samba-technical@lists.samba.org>
List-Help: <mailto:samba-technical-request@lists.samba.org?subject=help>
List-Subscribe: <https://lists.samba.org/mailman/listinfo/samba-technical>,
 <mailto:samba-technical-request@lists.samba.org?subject=subscribe>
From: Anoop C S via samba-technical <samba-technical@lists.samba.org>
Reply-To: Anoop C S <anoopcs@cryptolab.net>
Cc: Stefan Metzmacher <metze@samba.org>, obnox <obnox@samba.org>,
 "Volker.Lendecke" <Volker.Lendecke@SerNet.DE>, Jeremy Allison <jra@samba.org>,
 gd <gd@samba.org>
Errors-To: samba-technical-bounces@lists.samba.org
Sender: "samba-technical" <samba-technical-bounces@lists.samba.org>


--=-lnxZaMKuDY//izoPdY9y
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit

On Thu, 2019-08-22 at 15:43 +0530, Anoop C S via samba-technical wrote:
> Hi,
> 
> Proposing the attached patch to use pthreadpool inside vfs_glusterfs
> to
> schedule aio operations which is found to achieve significant
> performance boost.

Attaching a new version with BUG id updated in commit message.

> Reviews are appreciated.
> 
> Thanks,
> Anoop C S.

--=-lnxZaMKuDY//izoPdY9y
Content-Disposition: attachment; filename="master.patch"
Content-Type: text/x-patch; name="master.patch"; charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSAyN2ZkN2U4ZTdmZGU0YjdlNDc4ZGRjM2IyNDdlOTNjYzQwYzdmZDUzIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBQb29ybmltYSBHIDxwZ3VydXNpZEByZWRoYXQuY29tPgpEYXRl
OiBXZWQsIDI0IEp1bCAyMDE5IDE1OjE1OjMzICswNTMwClN1YmplY3Q6IFtQQVRDSF0gdmZzX2ds
dXN0ZXJmczogVXNlIHB0aHJlYWRwb29sIGZvciBzY2hlZHVsaW5nIGFpbyBvcGVyYXRpb25zCgpC
VUc6IGh0dHBzOi8vYnVnemlsbGEuc2FtYmEub3JnL3Nob3dfYnVnLmNnaT9pZD0xNDA5OAoKU2ln
bmVkLW9mZi1ieTogUG9vcm5pbWEgRyA8cGd1cnVzaWRAcmVkaGF0LmNvbT4KUmV2aWV3ZWQtYnk6
IEd1ZW50aGVyIERlc2NobmVyIDxnZEBzYW1iYS5vcmc+Ci0tLQogc291cmNlMy9tb2R1bGVzL3Zm
c19nbHVzdGVyZnMuYyB8IDUzNSArKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLQogMSBm
aWxlIGNoYW5nZWQsIDI2MCBpbnNlcnRpb25zKCspLCAyNzUgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvc291cmNlMy9tb2R1bGVzL3Zmc19nbHVzdGVyZnMuYyBiL3NvdXJjZTMvbW9kdWxlcy92
ZnNfZ2x1c3RlcmZzLmMKaW5kZXggMDkyOTliYzcwYzUuLjdmNjNiNWQ2NjYyIDEwMDY0NAotLS0g
YS9zb3VyY2UzL21vZHVsZXMvdmZzX2dsdXN0ZXJmcy5jCisrKyBiL3NvdXJjZTMvbW9kdWxlcy92
ZnNfZ2x1c3RlcmZzLmMKQEAgLTQ1LDE0ICs0NSwxMSBAQAogI2luY2x1ZGUgImxpYi91dGlsL3N5
c19ydy5oIgogI2luY2x1ZGUgInNtYnByb2ZpbGUuaCIKICNpbmNsdWRlICJtb2R1bGVzL3Bvc2l4
YWNsX3hhdHRyLmgiCisjaW5jbHVkZSAibGliL3B0aHJlYWRwb29sL3B0aHJlYWRwb29sX3RldmVu
dC5oIgogCiAjZGVmaW5lIERFRkFVTFRfVk9MRklMRV9TRVJWRVIgImxvY2FsaG9zdCIKICNkZWZp
bmUgR0xVU1RFUl9OQU1FX01BWCAyNTUKIAotc3RhdGljIGludCByZWFkX2ZkID0gLTE7Ci1zdGF0
aWMgaW50IHdyaXRlX2ZkID0gLTE7Ci1zdGF0aWMgc3RydWN0IHRldmVudF9mZCAqYWlvX3JlYWRf
ZXZlbnQgPSBOVUxMOwotCiAvKioKICAqIEhlbHBlciB0byBjb252ZXJ0IHN0cnVjdCBzdGF0IHRv
IHN0cnVjdCBzdGF0X2V4LgogICovCkBAIC03MTMsMjQ1ICs3MTAsMjExIEBAIHN0YXRpYyBzc2l6
ZV90IHZmc19nbHVzdGVyX3ByZWFkKHN0cnVjdCB2ZnNfaGFuZGxlX3N0cnVjdCAqaGFuZGxlLAog
CXJldHVybiByZXQ7CiB9CiAKLXN0cnVjdCBnbHVzdGVyZnNfYWlvX3N0YXRlOwotCi1zdHJ1Y3Qg
Z2x1c3RlcmZzX2Fpb193cmFwcGVyIHsKLQlzdHJ1Y3QgZ2x1c3RlcmZzX2Fpb19zdGF0ZSAqc3Rh
dGU7Ci19OwotCi1zdHJ1Y3QgZ2x1c3RlcmZzX2Fpb19zdGF0ZSB7CitzdHJ1Y3QgdmZzX2dsdXN0
ZXJfcHJlYWRfc3RhdGUgewogCXNzaXplX3QgcmV0OwotCXN0cnVjdCB0ZXZlbnRfcmVxICpyZXE7
Ci0JYm9vbCBjYW5jZWxsZWQ7CisJZ2xmc19mZF90ICpmZDsKKwl2b2lkICpidWY7CisJc2l6ZV90
IGNvdW50OworCW9mZl90IG9mZnNldDsKKwogCXN0cnVjdCB2ZnNfYWlvX3N0YXRlIHZmc19haW9f
c3RhdGU7Ci0Jc3RydWN0IHRpbWVzcGVjIHN0YXJ0OwogCVNNQlBST0ZJTEVfQllURVNfQVNZTkNf
U1RBVEUocHJvZmlsZV9ieXRlcyk7CiB9OwogCi1zdGF0aWMgaW50IGFpb193cmFwcGVyX2Rlc3Ry
dWN0b3Ioc3RydWN0IGdsdXN0ZXJmc19haW9fd3JhcHBlciAqd3JhcCkKK3N0YXRpYyB2b2lkIHZm
c19nbHVzdGVyX3ByZWFkX2RvKHZvaWQgKnByaXZhdGVfZGF0YSkKIHsKLQlpZiAod3JhcC0+c3Rh
dGUgIT0gTlVMTCkgewotCQl3cmFwLT5zdGF0ZS0+Y2FuY2VsbGVkID0gdHJ1ZTsKLQl9CisJc3Ry
dWN0IHZmc19nbHVzdGVyX3ByZWFkX3N0YXRlICpzdGF0ZSA9IHRhbGxvY19nZXRfdHlwZV9hYm9y
dCgKKwkJcHJpdmF0ZV9kYXRhLCBzdHJ1Y3QgdmZzX2dsdXN0ZXJfcHJlYWRfc3RhdGUpOworCXN0
cnVjdCB0aW1lc3BlYyBzdGFydF90aW1lOworCXN0cnVjdCB0aW1lc3BlYyBlbmRfdGltZTsKIAot
CXJldHVybiAwOwotfQorCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU0VUX0JVU1koc3RhdGUtPnBy
b2ZpbGVfYnl0ZXMpOwogCi0vKgotICogVGhpcyBmdW5jdGlvbiBpcyB0aGUgY2FsbGJhY2sgdGhh
dCB3aWxsIGJlIGNhbGxlZCBvbiBnbHVzdGVyZnMKLSAqIHRocmVhZHMgb25jZSB0aGUgYXN5bmMg
SU8gc3VibWl0dGVkIGlzIGNvbXBsZXRlLiBUbyBub3RpZnkKLSAqIFNhbWJhIG9mIHRoZSBjb21w
bGV0aW9uIHdlIHVzZSBhIHBpcGUgYmFzZWQgcXVldWUuCi0gKi8KKwlQUk9GSUxFX1RJTUVTVEFN
UCgmc3RhcnRfdGltZSk7CisKKwlkbyB7CiAjaWZkZWYgSEFWRV9HRkFQSV9WRVJfN182Ci1zdGF0
aWMgdm9pZCBhaW9fZ2x1c3RlcmZzX2RvbmUoZ2xmc19mZF90ICpmZCwgc3NpemVfdCByZXQsCi0J
CQkgICAgICAgc3RydWN0IGdsZnNfc3RhdCAqcHJlc3RhdCwKLQkJCSAgICAgICBzdHJ1Y3QgZ2xm
c19zdGF0ICpwb3N0c3RhdCwKLQkJCSAgICAgICB2b2lkICpkYXRhKQorCQlzdGF0ZS0+cmV0ID0g
Z2xmc19wcmVhZChzdGF0ZS0+ZmQsIHN0YXRlLT5idWYsIHN0YXRlLT5jb3VudCwKKwkJCQkJc3Rh
dGUtPm9mZnNldCwgMCwgTlVMTCk7CiAjZWxzZQotc3RhdGljIHZvaWQgYWlvX2dsdXN0ZXJmc19k
b25lKGdsZnNfZmRfdCAqZmQsIHNzaXplX3QgcmV0LCB2b2lkICpkYXRhKQorCQlzdGF0ZS0+cmV0
ID0gZ2xmc19wcmVhZChzdGF0ZS0+ZmQsIHN0YXRlLT5idWYsIHN0YXRlLT5jb3VudCwKKwkJCQkJ
c3RhdGUtPm9mZnNldCwgMCk7CiAjZW5kaWYKLXsKLQlzdHJ1Y3QgZ2x1c3RlcmZzX2Fpb19zdGF0
ZSAqc3RhdGUgPSBOVUxMOwotCWludCBzdHMgPSAwOwotCXN0cnVjdCB0aW1lc3BlYyBlbmQ7Ci0K
LQlzdGF0ZSA9IChzdHJ1Y3QgZ2x1c3RlcmZzX2Fpb19zdGF0ZSAqKWRhdGE7CisJfSB3aGlsZSAo
KHN0YXRlLT5yZXQgPT0gLTEpICYmIChlcnJubyA9PSBFSU5UUikpOwogCi0JUFJPRklMRV9USU1F
U1RBTVAoJmVuZCk7Ci0KLQlpZiAocmV0IDwgMCkgewotCQlzdGF0ZS0+cmV0ID0gLTE7CisJaWYg
KHN0YXRlLT5yZXQgPT0gLTEpIHsKIAkJc3RhdGUtPnZmc19haW9fc3RhdGUuZXJyb3IgPSBlcnJu
bzsKLQl9IGVsc2UgewotCQlzdGF0ZS0+cmV0ID0gcmV0OwogCX0KLQlzdGF0ZS0+dmZzX2Fpb19z
dGF0ZS5kdXJhdGlvbiA9IG5zZWNfdGltZV9kaWZmKCZlbmQsICZzdGF0ZS0+c3RhcnQpOwogCi0J
U01CUFJPRklMRV9CWVRFU19BU1lOQ19FTkQoc3RhdGUtPnByb2ZpbGVfYnl0ZXMpOworCVBST0ZJ
TEVfVElNRVNUQU1QKCZlbmRfdGltZSk7CiAKLQkvKgotCSAqIFdyaXRlIHRoZSBzdGF0ZSBwb2lu
dGVyIHRvIGdsdXN0ZXJmc19haW9fc3RhdGUgdG8gdGhlCi0JICogcGlwZSwgc28gd2UgY2FuIGNh
bGwgdGV2ZW50X3JlcV9kb25lKCkgZnJvbSB0aGUgbWFpbiB0aHJlYWQsCi0JICogYmVjYXVzZSB0
ZXZlbnRfcmVxX2RvbmUoKSBpcyBub3QgZGVzaWduZWQgdG8gYmUgZXhlY3V0ZWQgaW4KLQkgKiB0
aGUgbXVsdGl0aHJlYWQgZW52aXJvbm1lbnQsIHNvIHRldmVudF9yZXFfZG9uZSgpIG11c3QgYmUK
LQkgKiBleGVjdXRlZCBmcm9tIHRoZSBzbWJkIG1haW4gdGhyZWFkLgotCSAqCi0JICogd3JpdGUo
Mikgb24gcGlwZXMgd2l0aCBzaXplcyB1bmRlciBfUE9TSVhfUElQRV9CVUYKLQkgKiBpbiBzaXpl
IGlzIGF0b21pYywgd2l0aG91dCB0aGlzLCB0aGUgdXNlIG9wIHBpcGVzIGluIHRoaXMKLQkgKiBj
b2RlIHdvdWxkIG5vdCB3b3JrLgotCSAqCi0JICogc3lzX3dyaXRlIGlzIGEgdGhpbiBlbm91Z2gg
d3JhcHBlciBhcm91bmQgd3JpdGUoMikKLQkgKiB0aGF0IHdlIGNhbiB0cnVzdCBpdCBoZXJlLgot
CSAqLworCXN0YXRlLT52ZnNfYWlvX3N0YXRlLmR1cmF0aW9uID0gbnNlY190aW1lX2RpZmYoJmVu
ZF90aW1lLCAmc3RhcnRfdGltZSk7CiAKLQlzdHMgPSBzeXNfd3JpdGUod3JpdGVfZmQsICZzdGF0
ZSwgc2l6ZW9mKHN0cnVjdCBnbHVzdGVyZnNfYWlvX3N0YXRlICopKTsKLQlpZiAoc3RzIDwgMCkg
ewotCQlERUJVRygwLCgiXG5Xcml0ZSB0byBwaXBlIGZhaWxlZCAoJXMpIiwgc3RyZXJyb3IoZXJy
bm8pKSk7Ci0JfQotCi0JcmV0dXJuOworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU0VUX0lETEUo
c3RhdGUtPnByb2ZpbGVfYnl0ZXMpOwogfQogCi0vKgotICogUmVhZCBlYWNoIHJlcSBvZmYgdGhl
IHBpcGUgYW5kIHByb2Nlc3MgaXQuCi0gKi8KLXN0YXRpYyB2b2lkIGFpb190ZXZlbnRfZmRfZG9u
ZShzdHJ1Y3QgdGV2ZW50X2NvbnRleHQgKmV2ZW50X2N0eCwKLQkJCQlzdHJ1Y3QgdGV2ZW50X2Zk
ICpmZGUsCi0JCQkJdWludDE2X3QgZmxhZ3MsIHZvaWQgKmRhdGEpCitzdGF0aWMgaW50IHZmc19n
bHVzdGVyX3ByZWFkX3N0YXRlX2Rlc3RydWN0b3Ioc3RydWN0IHZmc19nbHVzdGVyX3ByZWFkX3N0
YXRlICpzdGF0ZSkKIHsKLQlzdHJ1Y3QgdGV2ZW50X3JlcSAqcmVxID0gTlVMTDsKLQlzdHJ1Y3Qg
Z2x1c3RlcmZzX2Fpb19zdGF0ZSAqc3RhdGUgPSBOVUxMOwotCWludCBzdHMgPSAwOwotCi0JLyoK
LQkgKiByZWFkKDIpIG9uIHBpcGVzIGlzIGF0b21pYyBpZiB0aGUgbmVlZGVkIGRhdGEgaXMgYXZh
aWxhYmxlCi0JICogaW4gdGhlIHBpcGUsIHBlciBTVVMgYW5kIFBPU0lYLiAgQmVjYXVzZSB3ZSBh
bHdheXMgd3JpdGUKLQkgKiB0byB0aGUgcGlwZSBpbiBzaXplb2Yoc3RydWN0IHRldmVudF9yZXEg
KikgY2h1bmtzLCB3ZSBjYW4KLQkgKiBhbHdheXMgcmVhZCBpbiB0aG9zZSBjaHVua3MsIGF0b21p
Y2FsbHkuCi0JICoKLQkgKiBzeXNfcmVhZCBpcyBhIHRoaW4gZW5vdWdoIHdyYXBwZXIgYXJvdW5k
IHJlYWQoMikgdGhhdCB3ZQotCSAqIGNhbiB0cnVzdCBpdCBoZXJlLgotCSAqLwotCi0Jc3RzID0g
c3lzX3JlYWQocmVhZF9mZCwgJnN0YXRlLCBzaXplb2Yoc3RydWN0IGdsdXN0ZXJmc19haW9fc3Rh
dGUgKikpOworCXJldHVybiAtMTsKK30KIAotCWlmIChzdHMgPCAwKSB7Ci0JCURFQlVHKDAsKCJc
blJlYWQgZnJvbSBwaXBlIGZhaWxlZCAoJXMpIiwgc3RyZXJyb3IoZXJybm8pKSk7Ci0JfQorc3Rh
dGljIHZvaWQgdmZzX2dsdXN0ZXJfcHJlYWRfZG9uZShzdHJ1Y3QgdGV2ZW50X3JlcSAqc3VicmVx
KQoreworCXN0cnVjdCB0ZXZlbnRfcmVxICpyZXEgPSB0ZXZlbnRfcmVxX2NhbGxiYWNrX2RhdGEo
CisJCXN1YnJlcSwgc3RydWN0IHRldmVudF9yZXEpOworCXN0cnVjdCB2ZnNfZ2x1c3Rlcl9wcmVh
ZF9zdGF0ZSAqc3RhdGUgPSB0ZXZlbnRfcmVxX2RhdGEoCisJCXJlcSwgc3RydWN0IHZmc19nbHVz
dGVyX3ByZWFkX3N0YXRlKTsKKwlpbnQgcmV0OwogCi0JLyogaWYgd2UndmUgY2FuY2VsbGVkIHRo
ZSBvcCwgdGhlcmUgaXMgbm8gcmVxLCBzbyBqdXN0IGNsZWFuIHVwLiAqLwotCWlmIChzdGF0ZS0+
Y2FuY2VsbGVkID09IHRydWUpIHsKLQkJVEFMTE9DX0ZSRUUoc3RhdGUpOworCXJldCA9IHB0aHJl
YWRwb29sX3RldmVudF9qb2JfcmVjdihzdWJyZXEpOworCVRBTExPQ19GUkVFKHN1YnJlcSk7CisJ
U01CUFJPRklMRV9CWVRFU19BU1lOQ19FTkQoc3RhdGUtPnByb2ZpbGVfYnl0ZXMpOworCXRhbGxv
Y19zZXRfZGVzdHJ1Y3RvcihzdGF0ZSwgTlVMTCk7CisJaWYgKHRldmVudF9yZXFfZXJyb3IocmVx
LCByZXQpKSB7CiAJCXJldHVybjsKIAl9CiAKLQlyZXEgPSBzdGF0ZS0+cmVxOworCXRldmVudF9y
ZXFfZG9uZShyZXEpOworfQorCitzdGF0aWMgc3NpemVfdCB2ZnNfZ2x1c3Rlcl9wcmVhZF9yZWN2
KHN0cnVjdCB0ZXZlbnRfcmVxICpyZXEsCisJCQkJICAgICAgc3RydWN0IHZmc19haW9fc3RhdGUg
KnZmc19haW9fc3RhdGUpCit7CisJc3RydWN0IHZmc19nbHVzdGVyX3ByZWFkX3N0YXRlICpzdGF0
ZSA9IHRldmVudF9yZXFfZGF0YSgKKwkJcmVxLCBzdHJ1Y3QgdmZzX2dsdXN0ZXJfcHJlYWRfc3Rh
dGUpOwogCi0JaWYgKHJlcSkgewotCQl0ZXZlbnRfcmVxX2RvbmUocmVxKTsKKwlpZiAodGV2ZW50
X3JlcV9pc191bml4X2Vycm9yKHJlcSwgJnZmc19haW9fc3RhdGUtPmVycm9yKSkgeworCQlyZXR1
cm4gLTE7CiAJfQotCXJldHVybjsKKworCSp2ZnNfYWlvX3N0YXRlID0gc3RhdGUtPnZmc19haW9f
c3RhdGU7CisJcmV0dXJuIHN0YXRlLT5yZXQ7CiB9CiAKLXN0YXRpYyBib29sIGluaXRfZ2x1c3Rl
cl9haW8oc3RydWN0IHZmc19oYW5kbGVfc3RydWN0ICpoYW5kbGUpCitzdGF0aWMgc3RydWN0IHRl
dmVudF9yZXEgKnZmc19nbHVzdGVyX3ByZWFkX3NlbmQoc3RydWN0IHZmc19oYW5kbGVfc3RydWN0
CisJCQkJCQkgICpoYW5kbGUsIFRBTExPQ19DVFggKm1lbV9jdHgsCisJCQkJCQkgIHN0cnVjdCB0
ZXZlbnRfY29udGV4dCAqZXYsCisJCQkJCQkgIGZpbGVzX3N0cnVjdCAqZnNwLAorCQkJCQkJICB2
b2lkICpkYXRhLCBzaXplX3QgbiwKKwkJCQkJCSAgb2ZmX3Qgb2Zmc2V0KQogewotCWludCBmZHNb
Ml07Ci0JaW50IHJldCA9IC0xOworCXN0cnVjdCB2ZnNfZ2x1c3Rlcl9wcmVhZF9zdGF0ZSAqc3Rh
dGU7CisJc3RydWN0IHRldmVudF9yZXEgKnJlcSwgKnN1YnJlcTsKIAotCWlmIChyZWFkX2ZkICE9
IC0xKSB7Ci0JCS8qCi0JCSAqIEFscmVhZHkgaW5pdGlhbGl6ZWQuCi0JCSAqLwotCQlyZXR1cm4g
dHJ1ZTsKKwlnbGZzX2ZkX3QgKmdsZmQgPSB2ZnNfZ2x1c3Rlcl9mZXRjaF9nbGZkKGhhbmRsZSwg
ZnNwKTsKKwlpZiAoZ2xmZCA9PSBOVUxMKSB7CisJCURCR19FUlIoIkZhaWxlZCB0byBmZXRjaCBn
bHVzdGVyIGZkXG4iKTsKKwkJcmV0dXJuIE5VTEw7CiAJfQogCi0JcmV0ID0gcGlwZShmZHMpOwot
CWlmIChyZXQgPT0gLTEpIHsKLQkJZ290byBmYWlsOworCXJlcSA9IHRldmVudF9yZXFfY3JlYXRl
KG1lbV9jdHgsICZzdGF0ZSwgc3RydWN0IHZmc19nbHVzdGVyX3ByZWFkX3N0YXRlKTsKKwlpZiAo
cmVxID09IE5VTEwpIHsKKwkJcmV0dXJuIE5VTEw7CiAJfQogCi0JcmVhZF9mZCA9IGZkc1swXTsK
LQl3cml0ZV9mZCA9IGZkc1sxXTsKKwlzdGF0ZS0+cmV0ID0gLTE7CisJc3RhdGUtPmZkID0gZ2xm
ZDsKKwlzdGF0ZS0+YnVmID0gZGF0YTsKKwlzdGF0ZS0+Y291bnQgPSBuOworCXN0YXRlLT5vZmZz
ZXQgPSBvZmZzZXQ7CiAKLQlhaW9fcmVhZF9ldmVudCA9IHRldmVudF9hZGRfZmQoaGFuZGxlLT5j
b25uLT5zY29ubi0+ZXZfY3R4LAotCQkJCQlOVUxMLAotCQkJCQlyZWFkX2ZkLAotCQkJCQlURVZF
TlRfRkRfUkVBRCwKLQkJCQkJYWlvX3RldmVudF9mZF9kb25lLAotCQkJCQlOVUxMKTsKLQlpZiAo
YWlvX3JlYWRfZXZlbnQgPT0gTlVMTCkgewotCQlnb3RvIGZhaWw7Ci0JfQorCVNNQlBST0ZJTEVf
QllURVNfQVNZTkNfU1RBUlQoc3lzY2FsbF9hc3lzX3ByZWFkLCBwcm9maWxlX3AsCisJCQkJICAg
ICBzdGF0ZS0+cHJvZmlsZV9ieXRlcywgbik7CisJU01CUFJPRklMRV9CWVRFU19BU1lOQ19TRVRf
SURMRShzdGF0ZS0+cHJvZmlsZV9ieXRlcyk7CiAKLQlyZXR1cm4gdHJ1ZTsKLWZhaWw6Ci0JVEFM
TE9DX0ZSRUUoYWlvX3JlYWRfZXZlbnQpOwotCWlmIChyZWFkX2ZkICE9IC0xKSB7Ci0JCWNsb3Nl
KHJlYWRfZmQpOwotCQljbG9zZSh3cml0ZV9mZCk7Ci0JCXJlYWRfZmQgPSAtMTsKLQkJd3JpdGVf
ZmQgPSAtMTsKKwlzdWJyZXEgPSBwdGhyZWFkcG9vbF90ZXZlbnRfam9iX3NlbmQoCisJCXN0YXRl
LCBldiwgaGFuZGxlLT5jb25uLT5zY29ubi0+cG9vbCwKKwkJdmZzX2dsdXN0ZXJfcHJlYWRfZG8s
IHN0YXRlKTsKKwlpZiAodGV2ZW50X3JlcV9ub21lbShzdWJyZXEsIHJlcSkpIHsKKwkJcmV0dXJu
IHRldmVudF9yZXFfcG9zdChyZXEsIGV2KTsKIAl9Ci0JcmV0dXJuIGZhbHNlOworCXRldmVudF9y
ZXFfc2V0X2NhbGxiYWNrKHN1YnJlcSwgdmZzX2dsdXN0ZXJfcHJlYWRfZG9uZSwgcmVxKTsKKwor
CXRhbGxvY19zZXRfZGVzdHJ1Y3RvcihzdGF0ZSwgdmZzX2dsdXN0ZXJfcHJlYWRfc3RhdGVfZGVz
dHJ1Y3Rvcik7CisKKwlyZXR1cm4gcmVxOwogfQogCi1zdGF0aWMgc3RydWN0IGdsdXN0ZXJmc19h
aW9fc3RhdGUgKmFpb19zdGF0ZV9jcmVhdGUoVEFMTE9DX0NUWCAqbWVtX2N0eCkKK3N0cnVjdCB2
ZnNfZ2x1c3Rlcl9wd3JpdGVfc3RhdGUgeworCXNzaXplX3QgcmV0OworCWdsZnNfZmRfdCAqZmQ7
CisJY29uc3Qgdm9pZCAqYnVmOworCXNpemVfdCBjb3VudDsKKwlvZmZfdCBvZmZzZXQ7CisKKwlz
dHJ1Y3QgdmZzX2Fpb19zdGF0ZSB2ZnNfYWlvX3N0YXRlOworCVNNQlBST0ZJTEVfQllURVNfQVNZ
TkNfU1RBVEUocHJvZmlsZV9ieXRlcyk7Cit9OworCitzdGF0aWMgdm9pZCB2ZnNfZ2x1c3Rlcl9w
d3JpdGVfZG8odm9pZCAqcHJpdmF0ZV9kYXRhKQogewotCXN0cnVjdCB0ZXZlbnRfcmVxICpyZXEg
PSBOVUxMOwotCXN0cnVjdCBnbHVzdGVyZnNfYWlvX3N0YXRlICpzdGF0ZSA9IE5VTEw7Ci0Jc3Ry
dWN0IGdsdXN0ZXJmc19haW9fd3JhcHBlciAqd3JhcHBlciA9IE5VTEw7CisJc3RydWN0IHZmc19n
bHVzdGVyX3B3cml0ZV9zdGF0ZSAqc3RhdGUgPSB0YWxsb2NfZ2V0X3R5cGVfYWJvcnQoCisJCXBy
aXZhdGVfZGF0YSwgc3RydWN0IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0ZSk7CisJc3RydWN0IHRp
bWVzcGVjIHN0YXJ0X3RpbWU7CisJc3RydWN0IHRpbWVzcGVjIGVuZF90aW1lOwogCi0JcmVxID0g
dGV2ZW50X3JlcV9jcmVhdGUobWVtX2N0eCwgJndyYXBwZXIsIHN0cnVjdCBnbHVzdGVyZnNfYWlv
X3dyYXBwZXIpOworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU0VUX0JVU1koc3RhdGUtPnByb2Zp
bGVfYnl0ZXMpOwogCi0JaWYgKHJlcSA9PSBOVUxMKSB7Ci0JCXJldHVybiBOVUxMOwotCX0KKwlQ
Uk9GSUxFX1RJTUVTVEFNUCgmc3RhcnRfdGltZSk7CiAKLQlzdGF0ZSA9IHRhbGxvY196ZXJvKE5V
TEwsIHN0cnVjdCBnbHVzdGVyZnNfYWlvX3N0YXRlKTsKKwlkbyB7CisjaWZkZWYgSEFWRV9HRkFQ
SV9WRVJfN182CisJCXN0YXRlLT5yZXQgPSBnbGZzX3B3cml0ZShzdGF0ZS0+ZmQsIHN0YXRlLT5i
dWYsIHN0YXRlLT5jb3VudCwKKwkJCQkJIHN0YXRlLT5vZmZzZXQsIDAsIE5VTEwsIE5VTEwpOwor
I2Vsc2UKKwkJc3RhdGUtPnJldCA9IGdsZnNfcHdyaXRlKHN0YXRlLT5mZCwgc3RhdGUtPmJ1Ziwg
c3RhdGUtPmNvdW50LAorCQkJCQkgc3RhdGUtPm9mZnNldCwgMCk7CisjZW5kaWYKKwl9IHdoaWxl
ICgoc3RhdGUtPnJldCA9PSAtMSkgJiYgKGVycm5vID09IEVJTlRSKSk7CiAKLQlpZiAoc3RhdGUg
PT0gTlVMTCkgewotCQlUQUxMT0NfRlJFRShyZXEpOwotCQlyZXR1cm4gTlVMTDsKKwlpZiAoc3Rh
dGUtPnJldCA9PSAtMSkgeworCQlzdGF0ZS0+dmZzX2Fpb19zdGF0ZS5lcnJvciA9IGVycm5vOwog
CX0KIAotCXRhbGxvY19zZXRfZGVzdHJ1Y3Rvcih3cmFwcGVyLCBhaW9fd3JhcHBlcl9kZXN0cnVj
dG9yKTsKLQlzdGF0ZS0+Y2FuY2VsbGVkID0gZmFsc2U7Ci0Jc3RhdGUtPnJlcSA9IHJlcTsKKwlQ
Uk9GSUxFX1RJTUVTVEFNUCgmZW5kX3RpbWUpOwogCi0Jd3JhcHBlci0+c3RhdGUgPSBzdGF0ZTsK
KwlzdGF0ZS0+dmZzX2Fpb19zdGF0ZS5kdXJhdGlvbiA9IG5zZWNfdGltZV9kaWZmKCZlbmRfdGlt
ZSwgJnN0YXJ0X3RpbWUpOwogCi0JcmV0dXJuIHN0YXRlOworCVNNQlBST0ZJTEVfQllURVNfQVNZ
TkNfU0VUX0lETEUoc3RhdGUtPnByb2ZpbGVfYnl0ZXMpOwogfQogCi1zdGF0aWMgc3RydWN0IHRl
dmVudF9yZXEgKnZmc19nbHVzdGVyX3ByZWFkX3NlbmQoc3RydWN0IHZmc19oYW5kbGVfc3RydWN0
Ci0JCQkJCQkgICpoYW5kbGUsIFRBTExPQ19DVFggKm1lbV9jdHgsCi0JCQkJCQkgIHN0cnVjdCB0
ZXZlbnRfY29udGV4dCAqZXYsCi0JCQkJCQkgIGZpbGVzX3N0cnVjdCAqZnNwLAotCQkJCQkJICB2
b2lkICpkYXRhLCBzaXplX3QgbiwKLQkJCQkJCSAgb2ZmX3Qgb2Zmc2V0KQorc3RhdGljIGludCB2
ZnNfcHdyaXRlX3N0YXRlX2Rlc3RydWN0b3Ioc3RydWN0IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0
ZSAqc3RhdGUpCiB7Ci0Jc3RydWN0IGdsdXN0ZXJmc19haW9fc3RhdGUgKnN0YXRlID0gTlVMTDsK
LQlzdHJ1Y3QgdGV2ZW50X3JlcSAqcmVxID0gTlVMTDsKLQlpbnQgcmV0ID0gMDsKLQlnbGZzX2Zk
X3QgKmdsZmQgPSB2ZnNfZ2x1c3Rlcl9mZXRjaF9nbGZkKGhhbmRsZSwgZnNwKTsKLQotCWlmIChn
bGZkID09IE5VTEwpIHsKLQkJREJHX0VSUigiRmFpbGVkIHRvIGZldGNoIGdsdXN0ZXIgZmRcbiIp
OwotCQlyZXR1cm4gTlVMTDsKLQl9CisJcmV0dXJuIC0xOworfQogCi0Jc3RhdGUgPSBhaW9fc3Rh
dGVfY3JlYXRlKG1lbV9jdHgpOworc3RhdGljIHZvaWQgdmZzX3B3cml0ZV9kb25lKHN0cnVjdCB0
ZXZlbnRfcmVxICpzdWJyZXEpCit7CisJc3RydWN0IHRldmVudF9yZXEgKnJlcSA9IHRldmVudF9y
ZXFfY2FsbGJhY2tfZGF0YSgKKwkJc3VicmVxLCBzdHJ1Y3QgdGV2ZW50X3JlcSk7CisJc3RydWN0
IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0ZSAqc3RhdGUgPSB0ZXZlbnRfcmVxX2RhdGEoCisJCXJl
cSwgc3RydWN0IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0ZSk7CisJaW50IHJldDsKIAotCWlmIChz
dGF0ZSA9PSBOVUxMKSB7Ci0JCXJldHVybiBOVUxMOworCXJldCA9IHB0aHJlYWRwb29sX3RldmVu
dF9qb2JfcmVjdihzdWJyZXEpOworCVRBTExPQ19GUkVFKHN1YnJlcSk7CisJU01CUFJPRklMRV9C
WVRFU19BU1lOQ19FTkQoc3RhdGUtPnByb2ZpbGVfYnl0ZXMpOworCXRhbGxvY19zZXRfZGVzdHJ1
Y3RvcihzdGF0ZSwgTlVMTCk7CisJaWYgKHRldmVudF9yZXFfZXJyb3IocmVxLCByZXQpKSB7CisJ
CXJldHVybjsKIAl9CiAKLQlyZXEgPSBzdGF0ZS0+cmVxOwotCi0JaWYgKCFpbml0X2dsdXN0ZXJf
YWlvKGhhbmRsZSkpIHsKLQkJdGV2ZW50X3JlcV9lcnJvcihyZXEsIEVJTyk7Ci0JCXJldHVybiB0
ZXZlbnRfcmVxX3Bvc3QocmVxLCBldik7Ci0JfQorCXRldmVudF9yZXFfZG9uZShyZXEpOworfQog
Ci0JLyoKLQkgKiBhaW9fZ2x1c3RlcmZzX2RvbmUgYW5kIGFpb190ZXZlbnRfZmRfZG9uZSgpCi0J
ICogdXNlIHRoZSByYXcgdGV2ZW50IGNvbnRleHQuIFdlIG5lZWQgdG8gdXNlCi0JICogdGV2ZW50
X3JlcV9kZWZlcl9jYWxsYmFjaygpIGluIG9yZGVyIHRvCi0JICogdXNlIHRoZSBldmVudCBjb250
ZXh0IHdlJ3JlIHN0YXJ0ZWQgd2l0aC4KLQkgKi8KLQl0ZXZlbnRfcmVxX2RlZmVyX2NhbGxiYWNr
KHJlcSwgZXYpOworc3RhdGljIHNzaXplX3QgdmZzX2dsdXN0ZXJfcHdyaXRlX3JlY3Yoc3RydWN0
IHRldmVudF9yZXEgKnJlcSwKKwkJCQkgICAgICAgc3RydWN0IHZmc19haW9fc3RhdGUgKnZmc19h
aW9fc3RhdGUpCit7CisJc3RydWN0IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0ZSAqc3RhdGUgPSB0
ZXZlbnRfcmVxX2RhdGEoCisJCXJlcSwgc3RydWN0IHZmc19nbHVzdGVyX3B3cml0ZV9zdGF0ZSk7
CiAKLQlTTUJQUk9GSUxFX0JZVEVTX0FTWU5DX1NUQVJUKHN5c2NhbGxfYXN5c19wcmVhZCwgcHJv
ZmlsZV9wLAotCQkJCSAgICAgc3RhdGUtPnByb2ZpbGVfYnl0ZXMsIG4pOwotCVBST0ZJTEVfVElN
RVNUQU1QKCZzdGF0ZS0+c3RhcnQpOwotCXJldCA9IGdsZnNfcHJlYWRfYXN5bmMoZ2xmZCwgZGF0
YSwgbiwgb2Zmc2V0LCAwLCBhaW9fZ2x1c3RlcmZzX2RvbmUsCi0JCQkJc3RhdGUpOwotCWlmIChy
ZXQgPCAwKSB7Ci0JCXRldmVudF9yZXFfZXJyb3IocmVxLCAtcmV0KTsKLQkJcmV0dXJuIHRldmVu
dF9yZXFfcG9zdChyZXEsIGV2KTsKKwlpZiAodGV2ZW50X3JlcV9pc191bml4X2Vycm9yKHJlcSwg
JnZmc19haW9fc3RhdGUtPmVycm9yKSkgeworCQlyZXR1cm4gLTE7CiAJfQogCi0JcmV0dXJuIHJl
cTsKKwkqdmZzX2Fpb19zdGF0ZSA9IHN0YXRlLT52ZnNfYWlvX3N0YXRlOworCisJcmV0dXJuIHN0
YXRlLT5yZXQ7CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgdGV2ZW50X3JlcSAqdmZzX2dsdXN0ZXJfcHdy
aXRlX3NlbmQoc3RydWN0IHZmc19oYW5kbGVfc3RydWN0CkBAIC05NjEsNzggKzkyNCw0MSBAQCBz
dGF0aWMgc3RydWN0IHRldmVudF9yZXEgKnZmc19nbHVzdGVyX3B3cml0ZV9zZW5kKHN0cnVjdCB2
ZnNfaGFuZGxlX3N0cnVjdAogCQkJCQkJICBjb25zdCB2b2lkICpkYXRhLCBzaXplX3QgbiwKIAkJ
CQkJCSAgb2ZmX3Qgb2Zmc2V0KQogewotCXN0cnVjdCBnbHVzdGVyZnNfYWlvX3N0YXRlICpzdGF0
ZSA9IE5VTEw7Ci0Jc3RydWN0IHRldmVudF9yZXEgKnJlcSA9IE5VTEw7Ci0JaW50IHJldCA9IDA7
Ci0JZ2xmc19mZF90ICpnbGZkID0gdmZzX2dsdXN0ZXJfZmV0Y2hfZ2xmZChoYW5kbGUsIGZzcCk7
CisJc3RydWN0IHRldmVudF9yZXEgKnJlcSwgKnN1YnJlcTsKKwlzdHJ1Y3QgdmZzX2dsdXN0ZXJf
cHdyaXRlX3N0YXRlICpzdGF0ZTsKIAorCWdsZnNfZmRfdCAqZ2xmZCA9IHZmc19nbHVzdGVyX2Zl
dGNoX2dsZmQoaGFuZGxlLCBmc3ApOwogCWlmIChnbGZkID09IE5VTEwpIHsKIAkJREJHX0VSUigi
RmFpbGVkIHRvIGZldGNoIGdsdXN0ZXIgZmRcbiIpOwogCQlyZXR1cm4gTlVMTDsKIAl9CiAKLQlz
dGF0ZSA9IGFpb19zdGF0ZV9jcmVhdGUobWVtX2N0eCk7Ci0KLQlpZiAoc3RhdGUgPT0gTlVMTCkg
eworCXJlcSA9IHRldmVudF9yZXFfY3JlYXRlKG1lbV9jdHgsICZzdGF0ZSwgc3RydWN0IHZmc19n
bHVzdGVyX3B3cml0ZV9zdGF0ZSk7CisJaWYgKHJlcSA9PSBOVUxMKSB7CiAJCXJldHVybiBOVUxM
OwogCX0KIAotCXJlcSA9IHN0YXRlLT5yZXE7Ci0KLQlpZiAoIWluaXRfZ2x1c3Rlcl9haW8oaGFu
ZGxlKSkgewotCQl0ZXZlbnRfcmVxX2Vycm9yKHJlcSwgRUlPKTsKLQkJcmV0dXJuIHRldmVudF9y
ZXFfcG9zdChyZXEsIGV2KTsKLQl9Ci0KLQkvKgotCSAqIGFpb19nbHVzdGVyZnNfZG9uZSBhbmQg
YWlvX3RldmVudF9mZF9kb25lKCkKLQkgKiB1c2UgdGhlIHJhdyB0ZXZlbnQgY29udGV4dC4gV2Ug
bmVlZCB0byB1c2UKLQkgKiB0ZXZlbnRfcmVxX2RlZmVyX2NhbGxiYWNrKCkgaW4gb3JkZXIgdG8K
LQkgKiB1c2UgdGhlIGV2ZW50IGNvbnRleHQgd2UncmUgc3RhcnRlZCB3aXRoLgotCSAqLwotCXRl
dmVudF9yZXFfZGVmZXJfY2FsbGJhY2socmVxLCBldik7CisJc3RhdGUtPnJldCA9IC0xOworCXN0
YXRlLT5mZCA9IGdsZmQ7CisJc3RhdGUtPmJ1ZiA9IGRhdGE7CisJc3RhdGUtPmNvdW50ID0gbjsK
KwlzdGF0ZS0+b2Zmc2V0ID0gb2Zmc2V0OwogCiAJU01CUFJPRklMRV9CWVRFU19BU1lOQ19TVEFS
VChzeXNjYWxsX2FzeXNfcHdyaXRlLCBwcm9maWxlX3AsCiAJCQkJICAgICBzdGF0ZS0+cHJvZmls
ZV9ieXRlcywgbik7Ci0JUFJPRklMRV9USU1FU1RBTVAoJnN0YXRlLT5zdGFydCk7Ci0JcmV0ID0g
Z2xmc19wd3JpdGVfYXN5bmMoZ2xmZCwgZGF0YSwgbiwgb2Zmc2V0LCAwLCBhaW9fZ2x1c3RlcmZz
X2RvbmUsCi0JCQkJc3RhdGUpOwotCWlmIChyZXQgPCAwKSB7Ci0JCXRldmVudF9yZXFfZXJyb3Io
cmVxLCAtcmV0KTsKLQkJcmV0dXJuIHRldmVudF9yZXFfcG9zdChyZXEsIGV2KTsKLQl9Ci0KLQly
ZXR1cm4gcmVxOwotfQotCi1zdGF0aWMgc3NpemVfdCB2ZnNfZ2x1c3Rlcl9yZWN2KHN0cnVjdCB0
ZXZlbnRfcmVxICpyZXEsCi0JCQkJc3RydWN0IHZmc19haW9fc3RhdGUgKnZmc19haW9fc3RhdGUp
Ci17Ci0Jc3RydWN0IGdsdXN0ZXJmc19haW9fd3JhcHBlciAqd3JhcHBlciA9IE5VTEw7Ci0JaW50
IHJldCA9IDA7CisJU01CUFJPRklMRV9CWVRFU19BU1lOQ19TRVRfSURMRShzdGF0ZS0+cHJvZmls
ZV9ieXRlcyk7CiAKLQl3cmFwcGVyID0gdGV2ZW50X3JlcV9kYXRhKHJlcSwgc3RydWN0IGdsdXN0
ZXJmc19haW9fd3JhcHBlcik7Ci0KLQlpZiAod3JhcHBlciA9PSBOVUxMKSB7Ci0JCXJldHVybiAt
MTsKLQl9Ci0KLQlpZiAod3JhcHBlci0+c3RhdGUgPT0gTlVMTCkgewotCQlyZXR1cm4gLTE7Ci0J
fQotCi0JaWYgKHRldmVudF9yZXFfaXNfdW5peF9lcnJvcihyZXEsICZ2ZnNfYWlvX3N0YXRlLT5l
cnJvcikpIHsKLQkJcmV0dXJuIC0xOworCXN1YnJlcSA9IHB0aHJlYWRwb29sX3RldmVudF9qb2Jf
c2VuZCgKKwkJc3RhdGUsIGV2LCBoYW5kbGUtPmNvbm4tPnNjb25uLT5wb29sLAorCQl2ZnNfZ2x1
c3Rlcl9wd3JpdGVfZG8sIHN0YXRlKTsKKwlpZiAodGV2ZW50X3JlcV9ub21lbShzdWJyZXEsIHJl
cSkpIHsKKwkJcmV0dXJuIHRldmVudF9yZXFfcG9zdChyZXEsIGV2KTsKIAl9CisJdGV2ZW50X3Jl
cV9zZXRfY2FsbGJhY2soc3VicmVxLCB2ZnNfcHdyaXRlX2RvbmUsIHJlcSk7CiAKLQkqdmZzX2Fp
b19zdGF0ZSA9IHdyYXBwZXItPnN0YXRlLT52ZnNfYWlvX3N0YXRlOwotCXJldCA9IHdyYXBwZXIt
PnN0YXRlLT5yZXQ7Ci0KLQkvKiBDbGVhbiB1cCB0aGUgc3RhdGUsIGl0IGlzIGluIGEgTlVMTCBj
b250ZXh0LiAqLworCXRhbGxvY19zZXRfZGVzdHJ1Y3RvcihzdGF0ZSwgdmZzX3B3cml0ZV9zdGF0
ZV9kZXN0cnVjdG9yKTsKIAotCVRBTExPQ19GUkVFKHdyYXBwZXItPnN0YXRlKTsKLQotCXJldHVy
biByZXQ7CisJcmV0dXJuIHJlcTsKIH0KIAogc3RhdGljIHNzaXplX3QgdmZzX2dsdXN0ZXJfcHdy
aXRlKHN0cnVjdCB2ZnNfaGFuZGxlX3N0cnVjdCAqaGFuZGxlLApAQCAtMTExNSw2MiArMTA0MSwx
MjEgQEAgc3RhdGljIGludCB2ZnNfZ2x1c3Rlcl9yZW5hbWVhdChzdHJ1Y3QgdmZzX2hhbmRsZV9z
dHJ1Y3QgKmhhbmRsZSwKIAlyZXR1cm4gcmV0OwogfQogCitzdHJ1Y3QgdmZzX2dsdXN0ZXJfZnN5
bmNfc3RhdGUgeworCXNzaXplX3QgcmV0OworCWdsZnNfZmRfdCAqZmQ7CisKKwlzdHJ1Y3QgdmZz
X2Fpb19zdGF0ZSB2ZnNfYWlvX3N0YXRlOworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU1RBVEUo
cHJvZmlsZV9ieXRlcyk7Cit9OworCitzdGF0aWMgdm9pZCB2ZnNfZnN5bmNfZG8odm9pZCAqcHJp
dmF0ZV9kYXRhKQoreworCXN0cnVjdCB2ZnNfZ2x1c3Rlcl9mc3luY19zdGF0ZSAqc3RhdGUgPSB0
YWxsb2NfZ2V0X3R5cGVfYWJvcnQoCisJCXByaXZhdGVfZGF0YSwgc3RydWN0IHZmc19nbHVzdGVy
X2ZzeW5jX3N0YXRlKTsKKwlzdHJ1Y3QgdGltZXNwZWMgc3RhcnRfdGltZTsKKwlzdHJ1Y3QgdGlt
ZXNwZWMgZW5kX3RpbWU7CisKKwlTTUJQUk9GSUxFX0JZVEVTX0FTWU5DX1NFVF9CVVNZKHN0YXRl
LT5wcm9maWxlX2J5dGVzKTsKKworCVBST0ZJTEVfVElNRVNUQU1QKCZzdGFydF90aW1lKTsKKwor
CWRvIHsKKyNpZmRlZiBIQVZFX0dGQVBJX1ZFUl83XzYKKwkJc3RhdGUtPnJldCA9IGdsZnNfZnN5
bmMoc3RhdGUtPmZkLCBOVUxMLCBOVUxMKTsKKyNlbHNlCisJCXN0YXRlLT5yZXQgPSBnbGZzX2Zz
eW5jKHN0YXRlLT5mZCk7CisjZW5kaWYKKwl9IHdoaWxlICgoc3RhdGUtPnJldCA9PSAtMSkgJiYg
KGVycm5vID09IEVJTlRSKSk7CisKKwlpZiAoc3RhdGUtPnJldCA9PSAtMSkgeworCQlzdGF0ZS0+
dmZzX2Fpb19zdGF0ZS5lcnJvciA9IGVycm5vOworCX0KKworCVBST0ZJTEVfVElNRVNUQU1QKCZl
bmRfdGltZSk7CisKKwlzdGF0ZS0+dmZzX2Fpb19zdGF0ZS5kdXJhdGlvbiA9IG5zZWNfdGltZV9k
aWZmKCZlbmRfdGltZSwgJnN0YXJ0X3RpbWUpOworCisJU01CUFJPRklMRV9CWVRFU19BU1lOQ19T
RVRfSURMRShzdGF0ZS0+cHJvZmlsZV9ieXRlcyk7Cit9CisKK3N0YXRpYyBpbnQgdmZzX2ZzeW5j
X3N0YXRlX2Rlc3RydWN0b3Ioc3RydWN0IHZmc19nbHVzdGVyX2ZzeW5jX3N0YXRlICpzdGF0ZSkK
K3sKKwlyZXR1cm4gLTE7Cit9CisKK3N0YXRpYyB2b2lkIHZmc19mc3luY19kb25lKHN0cnVjdCB0
ZXZlbnRfcmVxICpzdWJyZXEpCit7CisJc3RydWN0IHRldmVudF9yZXEgKnJlcSA9IHRldmVudF9y
ZXFfY2FsbGJhY2tfZGF0YSgKKwkJc3VicmVxLCBzdHJ1Y3QgdGV2ZW50X3JlcSk7CisJc3RydWN0
IHZmc19nbHVzdGVyX2ZzeW5jX3N0YXRlICpzdGF0ZSA9IHRldmVudF9yZXFfZGF0YSgKKwkJcmVx
LCBzdHJ1Y3QgdmZzX2dsdXN0ZXJfZnN5bmNfc3RhdGUpOworCWludCByZXQ7CisKKwlyZXQgPSBw
dGhyZWFkcG9vbF90ZXZlbnRfam9iX3JlY3Yoc3VicmVxKTsKKwlUQUxMT0NfRlJFRShzdWJyZXEp
OworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfRU5EKHN0YXRlLT5wcm9maWxlX2J5dGVzKTsKKwl0
YWxsb2Nfc2V0X2Rlc3RydWN0b3Ioc3RhdGUsIE5VTEwpOworCisJaWYgKHRldmVudF9yZXFfZXJy
b3IocmVxLCByZXQpKSB7CisJCXJldHVybjsKKwl9CisKKwl0ZXZlbnRfcmVxX2RvbmUocmVxKTsK
K30KKworc3RhdGljIGludCB2ZnNfZ2x1c3Rlcl9mc3luY19yZWN2KHN0cnVjdCB0ZXZlbnRfcmVx
ICpyZXEsCisJCQkJICBzdHJ1Y3QgdmZzX2Fpb19zdGF0ZSAqdmZzX2Fpb19zdGF0ZSkKK3sKKwlz
dHJ1Y3QgdmZzX2dsdXN0ZXJfZnN5bmNfc3RhdGUgKnN0YXRlID0gdGV2ZW50X3JlcV9kYXRhKAor
CQlyZXEsIHN0cnVjdCB2ZnNfZ2x1c3Rlcl9mc3luY19zdGF0ZSk7CisKKwlpZiAodGV2ZW50X3Jl
cV9pc191bml4X2Vycm9yKHJlcSwgJnZmc19haW9fc3RhdGUtPmVycm9yKSkgeworCQlyZXR1cm4g
LTE7CisJfQorCisJKnZmc19haW9fc3RhdGUgPSBzdGF0ZS0+dmZzX2Fpb19zdGF0ZTsKKwlyZXR1
cm4gc3RhdGUtPnJldDsKK30KKwogc3RhdGljIHN0cnVjdCB0ZXZlbnRfcmVxICp2ZnNfZ2x1c3Rl
cl9mc3luY19zZW5kKHN0cnVjdCB2ZnNfaGFuZGxlX3N0cnVjdAogCQkJCQkJICpoYW5kbGUsIFRB
TExPQ19DVFggKm1lbV9jdHgsCiAJCQkJCQkgc3RydWN0IHRldmVudF9jb250ZXh0ICpldiwKIAkJ
CQkJCSBmaWxlc19zdHJ1Y3QgKmZzcCkKIHsKLQlzdHJ1Y3QgdGV2ZW50X3JlcSAqcmVxID0gTlVM
TDsKLQlzdHJ1Y3QgZ2x1c3RlcmZzX2Fpb19zdGF0ZSAqc3RhdGUgPSBOVUxMOwotCWludCByZXQg
PSAwOwotCWdsZnNfZmRfdCAqZ2xmZCA9IHZmc19nbHVzdGVyX2ZldGNoX2dsZmQoaGFuZGxlLCBm
c3ApOworCXN0cnVjdCB0ZXZlbnRfcmVxICpyZXEsICpzdWJyZXE7CisJc3RydWN0IHZmc19nbHVz
dGVyX2ZzeW5jX3N0YXRlICpzdGF0ZTsKIAorCWdsZnNfZmRfdCAqZ2xmZCA9IHZmc19nbHVzdGVy
X2ZldGNoX2dsZmQoaGFuZGxlLCBmc3ApOwogCWlmIChnbGZkID09IE5VTEwpIHsKIAkJREJHX0VS
UigiRmFpbGVkIHRvIGZldGNoIGdsdXN0ZXIgZmRcbiIpOwogCQlyZXR1cm4gTlVMTDsKIAl9CiAK
LQlzdGF0ZSA9IGFpb19zdGF0ZV9jcmVhdGUobWVtX2N0eCk7Ci0KLQlpZiAoc3RhdGUgPT0gTlVM
TCkgeworCXJlcSA9IHRldmVudF9yZXFfY3JlYXRlKG1lbV9jdHgsICZzdGF0ZSwgc3RydWN0IHZm
c19nbHVzdGVyX2ZzeW5jX3N0YXRlKTsKKwlpZiAocmVxID09IE5VTEwpIHsKIAkJcmV0dXJuIE5V
TEw7CiAJfQogCi0JcmVxID0gc3RhdGUtPnJlcTsKKwlzdGF0ZS0+cmV0ID0gLTE7CisJc3RhdGUt
PmZkID0gZ2xmZDsKKworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU1RBUlQoc3lzY2FsbF9hc3lz
X2ZzeW5jLCBwcm9maWxlX3AsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
c3RhdGUtPnByb2ZpbGVfYnl0ZXMsIDApOworCVNNQlBST0ZJTEVfQllURVNfQVNZTkNfU0VUX0lE
TEUoc3RhdGUtPnByb2ZpbGVfYnl0ZXMpOwogCi0JaWYgKCFpbml0X2dsdXN0ZXJfYWlvKGhhbmRs
ZSkpIHsKLQkJdGV2ZW50X3JlcV9lcnJvcihyZXEsIEVJTyk7CisJc3VicmVxID0gcHRocmVhZHBv
b2xfdGV2ZW50X2pvYl9zZW5kKAorCQlzdGF0ZSwgZXYsIGhhbmRsZS0+Y29ubi0+c2Nvbm4tPnBv
b2wsIHZmc19mc3luY19kbywgc3RhdGUpOworCWlmICh0ZXZlbnRfcmVxX25vbWVtKHN1YnJlcSwg
cmVxKSkgewogCQlyZXR1cm4gdGV2ZW50X3JlcV9wb3N0KHJlcSwgZXYpOwogCX0KKwl0ZXZlbnRf
cmVxX3NldF9jYWxsYmFjayhzdWJyZXEsIHZmc19mc3luY19kb25lLCByZXEpOwogCi0JLyoKLQkg
KiBhaW9fZ2x1c3RlcmZzX2RvbmUgYW5kIGFpb190ZXZlbnRfZmRfZG9uZSgpCi0JICogdXNlIHRo
ZSByYXcgdGV2ZW50IGNvbnRleHQuIFdlIG5lZWQgdG8gdXNlCi0JICogdGV2ZW50X3JlcV9kZWZl
cl9jYWxsYmFjaygpIGluIG9yZGVyIHRvCi0JICogdXNlIHRoZSBldmVudCBjb250ZXh0IHdlJ3Jl
IHN0YXJ0ZWQgd2l0aC4KLQkgKi8KLQl0ZXZlbnRfcmVxX2RlZmVyX2NhbGxiYWNrKHJlcSwgZXYp
OworCXRhbGxvY19zZXRfZGVzdHJ1Y3RvcihzdGF0ZSwgdmZzX2ZzeW5jX3N0YXRlX2Rlc3RydWN0
b3IpOwogCi0JU01CUFJPRklMRV9CWVRFU19BU1lOQ19TVEFSVChzeXNjYWxsX2FzeXNfZnN5bmMs
IHByb2ZpbGVfcCwKLQkJCQkgICAgIHN0YXRlLT5wcm9maWxlX2J5dGVzLCAwKTsKLQlQUk9GSUxF
X1RJTUVTVEFNUCgmc3RhdGUtPnN0YXJ0KTsKLQlyZXQgPSBnbGZzX2ZzeW5jX2FzeW5jKGdsZmQs
IGFpb19nbHVzdGVyZnNfZG9uZSwgc3RhdGUpOwotCWlmIChyZXQgPCAwKSB7Ci0JCXRldmVudF9y
ZXFfZXJyb3IocmVxLCAtcmV0KTsKLQkJcmV0dXJuIHRldmVudF9yZXFfcG9zdChyZXEsIGV2KTsK
LQl9CiAJcmV0dXJuIHJlcTsKIH0KIAotc3RhdGljIGludCB2ZnNfZ2x1c3Rlcl9mc3luY19yZWN2
KHN0cnVjdCB0ZXZlbnRfcmVxICpyZXEsCi0JCQkJICBzdHJ1Y3QgdmZzX2Fpb19zdGF0ZSAqdmZz
X2Fpb19zdGF0ZSkKLXsKLQkvKgotCSAqIFVzZSBpbXBsaWNpdCBjb252ZXJzaW9uIHNzaXplX3Qt
PmludAotCSAqLwotCXJldHVybiB2ZnNfZ2x1c3Rlcl9yZWN2KHJlcSwgdmZzX2Fpb19zdGF0ZSk7
Ci19Ci0KIHN0YXRpYyBpbnQgdmZzX2dsdXN0ZXJfc3RhdChzdHJ1Y3QgdmZzX2hhbmRsZV9zdHJ1
Y3QgKmhhbmRsZSwKIAkJCSAgICBzdHJ1Y3Qgc21iX2ZpbGVuYW1lICpzbWJfZm5hbWUpCiB7CkBA
IC0xODcxLDEwICsxODU2LDEwIEBAIHN0YXRpYyBzdHJ1Y3QgdmZzX2ZuX3BvaW50ZXJzIGdsdXN0
ZXJmc19mbnMgPSB7CiAJLmNsb3NlX2ZuID0gdmZzX2dsdXN0ZXJfY2xvc2UsCiAJLnByZWFkX2Zu
ID0gdmZzX2dsdXN0ZXJfcHJlYWQsCiAJLnByZWFkX3NlbmRfZm4gPSB2ZnNfZ2x1c3Rlcl9wcmVh
ZF9zZW5kLAotCS5wcmVhZF9yZWN2X2ZuID0gdmZzX2dsdXN0ZXJfcmVjdiwKKwkucHJlYWRfcmVj
dl9mbiA9IHZmc19nbHVzdGVyX3ByZWFkX3JlY3YsCiAJLnB3cml0ZV9mbiA9IHZmc19nbHVzdGVy
X3B3cml0ZSwKIAkucHdyaXRlX3NlbmRfZm4gPSB2ZnNfZ2x1c3Rlcl9wd3JpdGVfc2VuZCwKLQku
cHdyaXRlX3JlY3ZfZm4gPSB2ZnNfZ2x1c3Rlcl9yZWN2LAorCS5wd3JpdGVfcmVjdl9mbiA9IHZm
c19nbHVzdGVyX3B3cml0ZV9yZWN2LAogCS5sc2Vla19mbiA9IHZmc19nbHVzdGVyX2xzZWVrLAog
CS5zZW5kZmlsZV9mbiA9IHZmc19nbHVzdGVyX3NlbmRmaWxlLAogCS5yZWN2ZmlsZV9mbiA9IHZm
c19nbHVzdGVyX3JlY3ZmaWxlLAotLSAKMi4yMS4wCgo=


--=-lnxZaMKuDY//izoPdY9y--


